Overview
This section covers API references for Snap, Midtrans's Payment API that includes a prebuilt hosted checkout page. By integrating with Snap, merchants can conveniently accept payments without the need to create everything from scratch, including :

Front-end user interfaces,
Custom settings via API and dashboard,
Promo management tools,
Payment rules/logic (e.g. payment routing), and many others.
Merchant will also be able to benefit from Snap's continuous payment performance optimization and features - from payment conversion-optimized front end improvements to no code promo implementation feature, which have been developed based on Midtrans's extensive experience in optimizing payment flows.

Snap is also available in form of UI Kit Mobile SDK.

Step-by-step integration walkthrough is available here.

You can also explore our developer tools such as Libraries & Plugins or Postman Collections to help speed up integrations with Snap even further.


Have a feature request / feedback for Snap Checkout? Submit it directly to our product team's inbox or upvote other feature requests here.



Questions? Contact our support team.
Not ready to integrate? Create a test account first.
Help us improve this docs & our solutions - let us know your feedback.

Backend Integration
post
https://app.sandbox.midtrans.com/snap/v1/transactions
Log in to see full request history
time	status	user agent	
Make a request to see history.
0 Requests This Month

Backend integration goal is to acquire SNAP_TOKEN by providing payment informations. We provide a HTTP API to do this.

Snap validates HTTP request by using Basic Authentication method. The username is your SERVER_KEY while the password is empty. You can see your SERVER-KEY on Settings - Access Keys. Authorization header value is represented by AUTH_STRING. AUTH_STRING is base-64 encoded string of your username & password. AUTH_STRING = Base64(SERVER_KEY + :)

Endpoint
HTTP Method: POST

Production: https://app.midtrans.com/snap/v1/transactions

Sandbox: https://app.sandbox.midtrans.com/snap/v1/transactions

Request Headers
To create valid Snap HTTP request, merchant have to add 3 headers:

Accept: application/json
Content-Type: application/json
Authorization: Basic AUTH_STRING

Ruby

SERVER_KEY = "VT-server-Cpo03kYDOc0cNUKgt6hnLkKg"

AUTH_STRING = Base64("VT-server-Cpo03kYDOc0cNUKgt6hnLkKg:")

AUTH_STRING = "VlQtc2VydmVyLUNwbzAza1lET2MwY05VS2d0NmhuTGtLZzo="

Request Body (JSON Parameter)
Minimum request
Complete request

{
  "transaction_details": {
    "order_id": "ORDER-101",
    "gross_amount": 10000
  }
}

JSON Objects
Collection of JSON objects that are used in Create Snap Token parameter.

Note: More JSON objects exists for each specific payment channels.



Transaction Details Object

JSON

"transaction_details": {
  "order_id": "ORDER-101",
  "gross_amount": 10000
}
Parameter	Description
transaction_details.order_id (required)
String(50) for Snap Checkout
String (36) for Payment Link	Unique transaction ID. A single ID could be used only once by a Merchant.
NOTE: Allowed Symbols are dash(-), underscore(_), tilde (~), and dot (.)
transaction_details.gross_amount
Integer (required)	Amount to be charged


Item Details Object

JSON

"item_details": [{
  "id": "ITEM1",
  "price": 10000,
  "quantity": 1,
  "name": "Midtrans Bear",
  "brand": "Midtrans",
  "category": "Toys",
  "merchant_name": "Midtrans",
  "url": "https://tokobuah.com/apple-fuji"
}]
Parameter	Description
id
String(50) (optional)	Item ID
price
Integer (required)	Price of the item
NOTE: Don't add decimal
quantity
Integer (required)	Quantity of the item
NOTE: Must be greater than or equal 1
name
String(50) (required)	Name of the item
brand
String(50) (optional)	Brand of the item
category
String(50) (optional)	Category of the item
merchant_name
String(50) (optional)	Merchant selling the item
url
String(50) (optional)	HTTP URL of the item in the merchant site

ðŸš§
Subtotal (item price multiplied by quantity) of all the item details needs to be exactly the same as the gross_amount inside transaction_details object
Please avoid using vertical line (|) for Alfamart payment type
item_details field is required for Akulaku payment type and does not allow duplicate item IDs (item_details.id) in one request
ðŸ“˜
Tips

You can actually make an item with minus price to be presented as discount



Customer Details Object

JSON

"customer_details": {
  "first_name": "TEST",
  "last_name": "MIDTRANSER",
  "email": "test@midtrans.com",
  "phone": "+628123456",
  "billing_address": {
    "first_name": "TEST",
    "last_name": "MIDTRANSER",
    "email": "test@midtrans.com",
    "phone": "081 2233 44-55",
    "address": "Sudirman",
    "city": "Jakarta",
    "postal_code": "12190",
    "country_code": "IDN"
  },
  "shipping_address": {
    "first_name": "TEST",
    "last_name": "MIDTRANSER",
    "email": "test@midtrans.com",
    "phone": "0 8128-75 7-9338",
    "address": "Sudirman",
    "city": "Jakarta",
    "postal_code": "12190",
    "country_code": "IDN"
  }
}
Parameter	Description
first_name
String(255) (optional)	
last_name
String(255) (optional)	
email
String(255) (optional)	
phone
String(255) (optional)	
billing_address
Address (optional)	
shipping_address
Address (optional)	

ðŸš§
Tips

Customer Details object is mandatory to be passed for Akulaku Paylater, if not passed, transaction will fail.



Address Object

billing_address
shipping_address

"billing_address": {
  "first_name": "TESTER",
  "last_name": "MIDTRANSER",
  "email": "test@midtrans.com",
  "phone": "081 2233 44-55",
  "address": "Sudirman",
  "city": "Jakarta",
  "postal_code": "12190",
  "country_code": "IDN"
}
Parameter	Description
first_name
String(255) (optional)	
last_name
String(255) (optional)	
email
String(255) (optional)	
phone
String(255) (optional)	
address
String(255) (optional)	
country_code
String(10) (optional)	
postal_code
String(10) (optional)	
city
String(100) (optional)	


Credit Card Object

JSON

"credit_card": {
  "save_card": true,
  "secure": true,
  "channel": "migs",
  "bank": "maybank",
  "installment": {
    "required": false,
    "terms": {
      "bni": [3, 6, 12],
      "mandiri": [3, 6, 12],
      "cimb": [3],
      "bca": [3, 6, 12],
      "offline": [6, 12]
    }
  },
  "whitelist_bins": [
    "48111111",
    "41111111",
    "bni"
  ],
  "dynamic_descriptor": {
    "merchant_name" : "Fuji Apple Inc",
    "city_name": "Jakarta",
    "country_code": "ID"
  }
}
Parameter	Description
secure
Boolean (optional)	Use 3D-Secure authentication when using credit card. Default: false
bank
String (optional)	Acquiring bank. Options: bca, bni, mandiri, cimb, bri, danamon, maybank, mega
channel
String (optional)	Acquiring channel. Options: migs
type
String (optional)	Credit card transaction type. Options: authorize, authorize_capture. Default: "authorize_capture"
whitelist_bins
Array (optional)	Allowed credit card BIN numbers. The bin value can be either a prefix(upto 8 digits) of card number or the name of a bank, in which case all the cards issued by that bank will be allowed. The supported bank names are bni bca mandiri cimb bri and maybank. Default: allow all cards
installment.required
Boolean (optional)	Force installment when using credit card. Default: false
installment.terms
Object (optional)	Available installment terms
dynamic_descriptor.merchant_name
String(25) (optional)	First 25 digit on customer's billing statement. Mostly used to show the merchant or product name. Only works for BNI.
dynamic_descriptor.city_name
String(13) (optional)	Next 13 digit on customer's billing statement. It works as secondary metadata on the statement. Mostly used to show city name or region. Only works for BNI.
dynamic_descriptor.country_code
String(2) (optional)	Last 2 digit on customer's billing statement. Mostly used to show country code. The format is ISO 3166-1 alpha-2. Only works for BNI.

BCA Virtual Account Object

JSON

"bca_va": {
  "va_number": "12345678911",
  "sub_company_code": "00000",
  "free_text": {
    "inquiry": [
      {
        "en": "text in English",
        "id": "text in Bahasa Indonesia"
      }
    ],
    "payment": [
      {
        "en": "text in English",
        "id": "text in Bahasa Indonesia"
      }
    ]
  }
}
Parameter	Description
va_number
String (optional)	Length should be within 6 to 11.
sub_company_code
String (optional)	BCA sub company code directed for this transactions. NOTE: Default is 00000
free_text
FreeText (optional)	

Free Text

Parameter	Description
inquiry
Array of FreeTextItem (optional)	Size should not exceed 10.
payment
Array of FreeTextItem (optional)	Size should not exceed 10.

Free Text Item

Parameter	Description
en
String (required)	Size should not exceed 50 chars.
id
String (required)	Size should not exceed 50 chars.


Permata Virtual Account Object

JSON

"permata_va": {
  "va_number": "1234567890",
  "recipient_name": "SUDARSONO"
}
Parameter	Description
va_number
String (optional)	Length should be 10. Only supported for b2b transactions.
recipient_name
String (optional)	Recipient name shown on the on the bank's payment prompt. It is shown as 20 character uppercase string. Anyting over 20 character will be truncated. NOTE: Default is merchant name


BNI Virtual Account Object

JSON

"bni_va": {
  "va_number": "12345678"
}
Parameter	Description
va_number
String (optional)	Length should be within 1 to 8.


Mandiri Bill Object

JSON

    "echannel" : {
        "bill_info1" : "Payment:",
        "bill_info2" : "Grocery Items",
    }
JSON Attribute	Description	Type	Required
bill_info1	Label 1. Mandiri allows only 10 characters. Exceeding characters will be truncated.	String(255)	Optional
bill_info2	Value for Label 1. Mandiri allows only 30 characters. Exceeding characters will be truncated.	String(255)	Optional

BRI Virtual Account Object

JSON

"bri_va": {
  "va_number": "12345678"
}
Parameter	Description
va_number
String (optional)	Length should be within 1 to 13.


CIMB Virtual Account Object

JSON

"cimb_va": {
  "va_number": "12345678"
}
Parameter	Description
va_number
String (optional)	Length should be within 1 to 12.

Danamon Virtual Account Object
JSON

"danamon_va": {
  "va_number": "123456789012"
}
Parameter	Description
va_number
String (optional)	Length should be within 1 to 12.

GoPay Object

JSON

"gopay": {
  "enable_callback": true,
  "callback_url": "http://gopay.com",
  "tokenization": true,
  "enforce_tokenization": true,
  "phone_number": "8123456789",
  "country_code": "62"
}
Parameter	Description
enable_callback
Boolean (optional)	Enable redirect back to merchant from GoJek apps. Default: false
callback_url
String (optional)	Determine where should customer be redirected from GoJek apps. It supports both HTTP and deeplink. Default: same value as finish url
tokenization
Boolean (optional)	Determine whether GoPay Tokenization feature is enabled or not. Default: false
enforce_tokenization
Boolean (optional)	When set to true, the fallback mechanism for GoPay tokenization is disabled. The transaction must be completed using the tokenization flow, unless multiple payment methods are enabled. Default: false
phone_number
String (optional)	Determine the phone number that will be used on gopay tokenization. Default: null
country_code
String (optional)	Determine the country code that will be used on gopay tokenization. Default: same value as finish url. Default: null


ShopeePay Object

JSON

"shopeepay": {
  "callback_url": "http://midtrans.com/finish-url?order_id=order-123"
}
Parameter	Description
callback_url
String (optional)	The URL to redirect the customer back from the ShopeePay app. It supports both HTTP and deeplink. Default: same value as finish url. If it's also empty, value is the finish URL and configured on your Snap Preferences.


Cstore (Over the Counter) Object

JSON

"cstore": {
  "alfamart_free_text_1" : "qwerty",
  "alfamart_free_text_2" : "asdfg",
  "alfamart_free_text_3" : "zxcvb"
}
Parameter	Description
alfamart_free_text_1
String(40) (optional)	First row of printed receipt description
alfamart_free_text_2
String(40) (optional)	Second row of printed receipt description
alfamart_free_text_3
String(40) (optional)	Third row of printed receipt description
Note : Indomaret doesn't use Cstore object.



Callbacks Object

JSON

"callbacks": {
    "finish" : "https://example.com/",
    "error": "https://example1.com"
}
Parameter	Description
finish
String(255) (optional)	Redirect URL after transaction is successfully paid. Applicable for all payments that will redirect from payment partner app/web back to Midtrans. Can also be set via Snap Settings menu in your dashboard. For GoPay, use the finish parameter in the GoPay object.
error
String(255)(optional)	Redirect URL after transaction failed to be paid by customer. Applicable for all payments that will redirect from payment partner app/web back to Midtrans (except for BNPL and GoPay payment method). Can also be set via Snap Settings menu in your dashboard.


Expiry Object

JSON

"expiry":  {
  "start_time": "2018-12-13 18:11:08 +0700",
  "unit": "minutes",
  "duration": 1
}
Parameter	Description
start_time
String(255) (optional)	Timestamp in yyyy-MM-dd HH:mm:ss Z format. If not specified, transaction time will be used as start time (when customer charge)
duration
Integer (required for expiry)	Expiry duration
unit
String (required for expiry)	Expiry unit. Options: day, hour, minute (plural term also accepted)

ðŸš§
If this parameter is not sent, the default expiry will use expiry setting on Snap preferences on merchant dashboard. Furthermore, if only unit and duration is given, start_time will equal the timestamp of the transaction time (when customer charge).

The Maximum expiry for the Snap token is 7 days. If the expiry sent is more than 7 days after the token is created. The Snap token will still expire 7 days after creation.

The minimum expiry for the Snap token is 20 seconds. If the expiry sent is less than 20 seconds. The Snap will respond to validation errors.

See this guide for more details.


Page Expiry Object

JSON Parameters

...
"page_expiry": {
    "duration": 3,
    "unit": "hours"
}
...
Parameter	Description	Type	Required
duration	Page expiry duration in numbers	Integer	Required
unit	Expiry unit. Options: day, hour, minute (plural terms also accepted).	String	Required

Note :
If not specified, default is 24 hours. See this guide for more details.


Recurring/Subscription Object

Use this object to show a dedicated recurring flow UI in Snap - differences include card will be automatically saved without having user manually tick the checkbox and adjusted copy to better suit recurring payments. Snap will then return the information passed here back in HTTP notification, for you to utilize when calling the Subscription API.

Use this object in conjunction with Subscription API - add this object to alter the Snap customer UI, then convert the transaction to recurring payments using Subscription API. Make sure to also have the prerequisites to accept Subscription (e.g. One Click feature) - otherwise transactions might fail.

Note that if you do choose to pass the start_time and interval_unit within the object, make sure to use the same information when calling the Subscription API - otherwise, information presented to user and actual subscription charge schedule will be different, which might result in chargeback.


JSON Parameters

...
"recurring": {
    "required": true,
    "start_time": "2024-06-09 15:07:00 +0700",
    "interval_unit": "week"
}
...
Parameter	Description	Type	Required
required	Specify the intent whether payment will be utilizing recurring payments or not.	Integer	Required (if recurring object is passed)
start_time	Start of the subscription schedule. Passed information will be shown in Snap Checkout UI & returned in HTTP Notification.	String	Optional
interval_unit	Subscription charge internal unit	String	Optional

Response
Response Success

JSON

{
  "token": "d379aa71-99eb-4dd1-b9bb-eefe813746e9",
  "redirect_url": "https://app.sandbox.midtrans.com/snap/v3/redirection/071e0c3d-dade-4148-a1b5-296ee8735b79"
}
HTTP status code: 201

Field	Description
token
String(36)	Snap token for opening the Snap popup
redirect_url
String(75)	URL for redirection

Overview
Frontend integration goal is to show Snap payment page within your site.

Include snap.js into your page so snap module is available. Don't forget to put your CLIENT-KEY as value of data-client-key attribute in snap.js script tag. You can see your CLIENT-KEY on Settings - Access Keys.

You can start payment process by calling snap.pay with SNAP_TOKEN acquired from backend integration as parameter.



Snap.js location

Production: https://app.midtrans.com/snap/snap.js

Sandbox: https://app.sandbox.midtrans.com/snap/snap.js



Viewport Meta Tag

To ensure that Snap popup modal is displayed correctly on a mobile device, please include the viewport meta tag inside your <head> element.

The most common implementation is the line of code below:

<meta name="viewport" content="width=device-width, initial-scale=1">

There is an alternative technique to load snap UI page instead of calling snap.js, this method called Window Redirection]


HTML

<html>
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <script type="text/javascript"
            src="https://app.sandbox.midtrans.com/snap/snap.js"
            data-client-key="<CLIENT-KEY>"></script>
  </head>
  <body>
    <button id="pay-button">Pay!</button>
    <script type="text/javascript">
      var payButton = document.getElementById('pay-button');
      payButton.addEventListener('click', function () {
        snap.pay('<SNAP_TOKEN>');
      });
    </script>
  </body>
</html>

Snap JS
Show Snap UI in your website/app by embedding Snap JS within a page or loading it as an overlay in your website/app.

There are two ways to display Snap's UI modal in your web/app, first is by embedding Snap modal within your web/app's page (Embedded mode) or by displaying the modal as an overlay on your web/app's page (Pop up mode).

Alternatively, you can call Snap's checkout page in a new page via window redirection method. See the guide here.

Sample implementation of Embedded mode and Pop up mode.



Snap Pop Up
snap pop up mode has 3 public functions: pay, show & hide .


pay(snapToken, options)

Start Snap payment page. You can also implement callback to trigger your custom JavaScript implementation on each event.


JavaScript

snap.pay('YOUR_SNAP_TOKEN', {
  onSuccess: function(result){console.log('success');console.log(result);},
  onPending: function(result){console.log('pending');console.log(result);},
  onError: function(result){console.log('error');console.log(result);},
  onClose: function(){console.log('customer closed the popup without finishing the payment');}
})
Name	Description
snapToken
String (required)	Snap token acquired from backend integration
enabledPayments
Array (optional)	List of payment types to be displayed. This will filter out enabled payments from backend integration.
options.onSuccess
Function (optional)	Payment success callback (200 status_code)
options.onPending
Function (optional)	Payment pending callback (201 status_code)
options.onError
Function (optional)	Payment error callback (NOT 200 or 201 status_code)
options.onClose
Function (optional)	Called if customer has closed the payment popup prematurely without finishing the payment
options.language
String (optional)	Sets the language. This will override language setting on Merchant Administration Portal. Supported values are en (English) and id (Bahasa Indonesia). Defaults to id
options.autoCloseDelay
Integer (optional)	Auto closes the last page of Indomaret and Bank Transfer payments after the specified time delay. The time delay is specified in seconds. Setting it to 0 will disable this feature. Defaults to 0.
options.selectedPaymentType
String (optional)	Skips order summary and select payment page to directly select a specific payment type. Supported values are credit_card, cimb_clicks, bca_klikbca, bca_klikpay, bri_epay, telkomsel_cash, echannel, indosat_dompetku, permata_va, other_va, bca_va, bni_va, kioson, indomaret, gci, and danamon_online.
options.uiMode
String (optional)	Choose the UI mode for GoPay, ShopeePay . Supported values are deeplink, qr, and auto. Set to auto by default.
onSuccess, onPending, & onError function accept one parameter which is Transaction Result object.



show()

Show snap loading page. Helper function if you want to show instant loading feedback while getting SNAP_TOKEN using AJAX.

If AJAX success, call snap.pay to continue payment process. Else, call snap.hide to end loading page.



hide()

Hide active snap page. Complementary function of snap.show. Helper function if you want to show instant loading feedback while getting SNAP_TOKEN using AJAX.


JavaScript

function ajaxGetToken(transactionData, callback){
    var snapToken;
    // Request get token to your server & save result to snapToken variable

    if(snapToken){
      callback(null, snapToken);
    } else {
      callback(new Error('Failed to fetch snap token'),null);
    }
}

payButton.onclick(function(){
  snap.show();
  ajaxGetToken(transactionData, function(error, snapToken){
    if(error){
      snap.hide();
    } else {
      snap.pay(snapToken);
    }
  });
});


Snap Embedded

Embed Snap modal within your page using this method. See how it will look like below.


Snap Embedded
Snap Embedded - Web Implementation


Snap Embedded - Mobile Implementation via Mobile Webview
Snap Embedded - Mobile Implementation via Mobile Webview


snap embedded mode has 3 functions; embed, show, and hide. show and hide works exactly the same as in Pop Up implementation.


Embed Snap Modal

Steps to implement :

Create an empty div with the desired ID, e.g. <div id="snap-container"></div>. This div is where the SNAP application will be placed.
Add snap.embed('${snap-token}', { embedId: ${your div id, for example snap-container} }). This will ensure that SNAP is correctly embedded and rendered within the div you previously set up.

html

<html>

<head>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <!-- @TODO: replace SET_YOUR_CLIENT_KEY_HERE with your client key -->
  <script type="text/javascript"
		src="https://app.sandbox.midtrans.com/snap/snap.js"
    data-client-key="SET_YOUR_CLIENT_KEY_HERE"></script>
  <!-- Note: replace with src="https://app.midtrans.com/snap/snap.js" for Production environment -->
</head>

<body>
  <button id="pay-button">Pay!</button>

  <!-- @TODO: You can add the desired ID as a reference for the embedId parameter. -->
  <div id="snap-container"></div>

  <script type="text/javascript">
    // For example trigger on button clicked, or any time you need
    var payButton = document.getElementById('pay-button');
    payButton.addEventListener('click', function () {
      // Trigger snap popup. @TODO: Replace TRANSACTION_TOKEN_HERE with your transaction token.
      // Also, use the embedId that you defined in the div above, here.
      window.snap.embed('YOUR_SNAP_TOKEN', {
        embedId: 'snap-container'
      });
    });
  </script>
</body>

</html>

To make the modal blends more seamlessly to your website, is it possible to hide Snap's modal header that shows your merchant/display name. To do so, go to Dashboard > Snap Preference > Theme and Logo > then untick Use Header.


Adjusting Snap Modal Dimension

The default width and height are set to 320px and 560px, which are the minimum sizes that meet our application standards.
Size of snap-container div can be adjusted by adding height and width via CSS. Note that Snap-container size can only be enlarged, but not make it smaller than the default width and height to ensure that customers can easily make payments and ensure all functionality works properly.
We also ensure responsiveness by using flexbox, which sets the width to 100% and follows the flex behavior of its parent. This ensures that the Snap content is appropriately displayed and preserved on smaller devices.




Implementing Callback JS

Utilize callback JS to trigger your custom JavaScript implementation on each event. See sample implementation below. Note that callback implementation between Embedded and Pop Up modes are identical.


HTML

<html>

<head>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <!-- @TODO: replace SET_YOUR_CLIENT_KEY_HERE with your client key -->
  <script type="text/javascript"
		src="https://app.sandbox.midtrans.com/snap/snap.js"
    data-client-key="SET_YOUR_CLIENT_KEY_HERE"></script>
  <!-- Note: replace with src="https://app.midtrans.com/snap/snap.js" for Production environment -->
</head>

<body>
  <button id="pay-button">Pay!</button>

  <!-- @TODO: You can add the desired ID as a reference for the embedId parameter. -->
  <div id="snap-container"></div>

  <script type="text/javascript">
    // For example trigger on button clicked, or any time you need
    var payButton = document.getElementById('pay-button');
    payButton.addEventListener('click', function () {
      // Trigger snap popup. @TODO: Replace TRANSACTION_TOKEN_HERE with your transaction token.
      // Also, use the embedId that you defined in the div above, here.
      window.snap.embed('YOUR_SNAP_TOKEN', {
        embedId: 'snap-container',
        onSuccess: function (result) {
          /* You may add your own implementation here */
          alert("payment success!"); console.log(result);
        },
        onPending: function (result) {
          /* You may add your own implementation here */
          alert("wating your payment!"); console.log(result);
        },
        onError: function (result) {
          /* You may add your own implementation here */
          alert("payment failed!"); console.log(result);
        },
        onClose: function () {
          /* You may add your own implementation here */
          alert('you closed the popup without finishing the payment');
        }
      });
    });
  </script>
</body>

</html>
Name	Description
embedID
String (required)	Embed ID for Snap container.
snapToken
String (required)	Snap token acquired from backend integration
enabledPayments
Array (optional)	List of payment types to be displayed. This will filter out enabled payments from backend integration.
options.onSuccess
Function (optional)	Payment success callback (200 status_code)
options.onPending
Function (optional)	Payment pending callback (201 status_code)
options.onError
Function (optional)	Payment error callback (4xx or 5xx status_code)
options.onClose
Function (optional)	Called if customer has closed the payment popup prematurely without finishing the payment
options.language
String (optional)	Sets the language. This will override language setting on Merchant Administration Portal. Supported values are en (English) and id (Bahasa Indonesia). Defaults to id
options.autoCloseDelay
Integer (optional)	Auto closes the last page of Indomaret and Bank Transfer payments after the specified time delay. The time delay is specified in seconds. Setting it to 0 will disable this feature. Defaults to 0.
options.selectedPaymentType
String (optional)	Skips order summary and select payment page to directly select a specific payment type. Supported values are credit_card, cimb_clicks, bca_klikbca, bca_klikpay, bri_epay, telkomsel_cash, echannel, indosat_dompetku, permata_va, other_va, bca_va, bni_va, kioson, indomaret, gci, and danamon_online.
options.uiMode
String (optional)	Choose the UI mode for GoPay, ShopeePay . Supported values are deeplink, qr, and auto. Set to auto by default.


Additional Implementation Notes

Unlike in Pop Up mode; in Embedded mode, X button in the modal is intentionally removed to prevent users from accidentally exiting after making a payment. However, merchant can still close the Snap window by using the hide() method covered in Snap Pop Up guide.
It is not possible to have two different types of Snap instances open simultaneously. If Snap Popup is currently active, Snap Embed cannot be displayed. To switch between the two methods, you will need to hide the active instance using the hide method.
It is possible to hide the header section in Snap modal that shows your merchant/display name. To do so, go to Dashboard > Snap Preference > Theme and Logo > then untick Use Header.
If the snap.js callback is not implemented, SNAP will redirect the user to the finish URL configured in the Midtrans Dashboard.

JS Callback
Transaction Result

Object representing transaction result passed to Snap callback.


Card Payment

Success credit card result

{
   "status_code":"200",
   "status_message":"Success, Credit Card transaction is successful",
   "transaction_id":"6d9677da-45a3-40d0-a0f0-8f0b2f860a64",
   "masked_card":"481111-1114",
   "order_id":"1459499971",
   "gross_amount":"10000.00",
   "payment_type":"credit_card",
   "transaction_time":"2016-04-01 15:39:58",
   "transaction_status":"capture",
   "fraud_status":"accept",
   "approval_code":"100057",
   "bank":"bni",
   "card_type":"credit"
}

e-Channel

Pending e-channel result
Success e-channel result

{
   "status_code":"201",
   "status_message":"Transaksi sedang diproses",
   "transaction_id":"0ae66c29-e4a6-4e7b-b223-a103564a8d29",
   "order_id":"1459500813",
   "gross_amount":"10000.00",
   "payment_type":"echannel",
   "transaction_time":"2016-04-01 15:54:07",
   "transaction_status":"pending",
   "fraud_status":"accept",
   "bill_key":"001689",
   "biller_code":"70012",
   "pdf_url": "https://app.midtrans.com/snap/v1/transactions/0ae66c29-e4a6-4e7b-b223-a103564a8d29/pdf"
}

BNI VA & BRI VA

Pending BNI VA & BRI VA result
Success BNI VA & BRI VA result

{
   "status_code":"201",
   "status_message":"Your Transaction is being processed",
   "transaction_id":"b9b651b6-2be9-4930-83fb-3bfa3b0a2f91",
   "order_id":"Farah-dc556491-51cc-4056-a184-c6d469c3dbc6",
   "gross_amount":"10000.00",
   "payment_type":"bank_transfer",
   "transaction_time":"2022-08-01 12:56:00",
   "transaction_status":"pending",
   "va_numbers":[{
      "bank":"bni",
      "va_number":"8202684534204029"
   }],
   "fraud_status":"accept",
   "pdf_url":"https://app.midtrans.com/snap/v1/transactions/630add54-9a0f-4abd-9a9b-8ac45a42e591/pdf",
   "finish_redirect_url":"http://example.com?order_id=Farah-dc556491-51cc-4056-a184-c6d469c3dbc6&status_code=201&transaction_status=pending"
}

Permata VA

Pending Permata VA Result
Success Permata VA Result

{
   "status_code":"201",
   "status_message":"Your Transaction is being processed",
   "transaction_id":"b0073bad-880b-474f-bcca-80e35d06312d",
   "order_id":"Farah-0b06064b-54b3-46bf-bc33-5175283a9896",
   "gross_amount":"10000.00",
   "payment_type":"bank_transfer",
   "transaction_time":"2022-08-01 13:06:44",
   "transaction_status":"pending",
   "fraud_status":"accept",
   "permata_va_number":"491004103177391",
   "pdf_url":"https://app.midtrans.com/snap/v1/transactions/bae01323-1708-4f81-a7ad-3159bb27aad8/pdf",
   "finish_redirect_url":"http://example.com?order_id=Farah-0b06064b-54b3-46bf-bc33-5175283a9896&status_code=201&transaction_status=pending"
}

BCA VA

Pending BCA VA Result
Success BCA VA Result

{
   "payment_type":"bank_transfer",
   "transaction_status":"pending",
   "pdf_url":"https://app.midtrans.com/snap/v1/transactions/f8eb89e6-50d7-4060-b4af-66170d9e0bf2/pdf",
   "finish_redirect_url":"http://example.com?order_id=Farah-40e5b947-9933-40c0-89f7-168f639e10d8&status_code=201&transaction_status=pending",
   "status_code":"201",
   "bca_va_number":"49112893603"
}

GoPay

Pending GoPay QRIS Result
Success GoPay QRIS Result
Pending GoPay Deeplink Result

{
   "status_code":"201",
   "status_message":"Your Transaction is being processed",
   "transaction_id":"1030b91a-9cd0-4f71-b165-ec4e2e1835cc",
   "order_id":"Farah-8daaac75-9657-4b03-80ca-0cc89bab6be7",
   "gross_amount":"10000.00",
   "payment_type":"gopay",
   "transaction_time":"2022-08-01 13:36:04",
   "transaction_status":"pending",
   "fraud_status":"accept",
   "finish_redirect_url":"http://example.com?order_id=Farah-8daaac75-9657-4b03-80ca-0cc89bab6be7&status_code=201&transaction_status=pending"
}

Shopeepay

Pending Shopeepay QRIS Result

{
   "status_code":"201",
   "status_message":"Your Transaction is being processed",
   "transaction_id":"cfe7aee8-774b-45a9-a81b-29de33aed349",
   "order_id":"Farah-9ca61c03-51ab-43b1-b788-fa4a5a9259ce",
   "gross_amount":"10000.00",
   "payment_type":"qris",
   "transaction_time":"2022-08-01 13:48:34",
   "transaction_status":"pending",
   "fraud_status":"accept",
   "finish_redirect_url":"http://example.com?order_id=Farah-9ca61c03-51ab-43b1-b788-fa4a5a9259ce&status_code=201&transaction_status=pending"
}

Indomaret

Pending Indomaret Trx Result
Success Indomaret Trx Result

{
   "status_code":"201",
   "status_message":"Your Transaction is being processed",
   "transaction_id":"06160057-7f70-47aa-8edb-b17ea129d675",
   "order_id":"Farah-d3a87270-8b96-406a-910b-bfcf87f210d9",
   "gross_amount":"10000.00",
   "payment_type":"cstore",
   "transaction_time":"2022-08-01 13:52:07",
   "transaction_status":"pending",
   "payment_code":"G7723491121852129730",
   "pdf_url":"https://app.midtrans.com/snap/v1/transactions/f9c65342-d7d8-4e8c-bff6-90cdc9fd9573/pdf",
   "finish_redirect_url":"http://example.com?order_id=Farah-d3a87270-8b96-406a-910b-bfcf87f210d9&status_code=201&transaction_status=pending"
}

Alfamart

Pending Alfamart Trx Result
Success Alfamart Trx Result

{
   "status_code":"201",
   "status_message":"Your Transaction is being processed",
   "transaction_id":"42d4cd59-b51a-4ad7-9a0d-14392f68fe53",
   "order_id":"Farah-014d66ae-0968-4a75-802f-e75da350aecb",
   "gross_amount":"10000.00",
   "payment_type":"cstore",
   "transaction_time":"2022-08-01 15:22:08",
   "transaction_status":"pending",
   "fraud_status":"accept",
   "payment_code":"9909743975002416",
   "pdf_url":"https://app.midtrans.com/snap/v1/transactions/2d42293b-1b76-495d-81da-07d5e30ba103/pdf",
   "finish_redirect_url":"http://example.com?order_id=Farah-014d66ae-0968-4a75-802f-e75da350aecb&status_code=201&transaction_status=pending"
}

Error Result

JSON

{
  "status_code": "406",
  "status_message": ["transaction has been processed"]
}

Definition

Name	Description
status_code
String	Transaction status code. Possible values: 200, 201, 202, 400, 404, 406, 500
status_message
String	Transaction status message
order_id
String	Merchant's unique payment ID or order ID
gross_amount
String	Processed gross amount
payment_type
Array (optional)	Selected payment type for transaction. Possible values:
Credit Cards:
credit_card.
Banks:
echannel (mandiri va/bill), bank_transfer, bca_klikpay, bca_klikbca, bri_epay.
E-wallets:
gopay, qris.
Merchants:
cstore.
transaction_id
String	Transaction ID
transaction_time
String	Timestamp in yyyy-MM-dd hh:mm:ss format
transaction_status
String	Transaction status. Possible values: capture, settlement, pending, cancel, expired
fraud_status
String	Fraud status. Possible values: accept, deny
approval_code
String	Bank approval code
masked_card
String	Customer's masked card (only in credit_card)
bank
String	Acquiring Bank
permata_va_number
String	Permata VA Number (only in bank_transfer using permata_va)
bca_va_number
String	Bca VA Number (only in bank_transfer using bca_va)
bill_key
String	Customer bill key (only in echannel)
biller_code
String	Customer biller code (only in echannel)
saved_token_id
String	TWO_CLICKS_TOKEN value. Only available in credit_card payment type
saved_token_id_expired_at
String	Specifies the expiration time of the TWO_CLICKS_TOKEN
card_type
String	Type of card used. Possible values: credit, debit
pdf_url
String	Link to show the payment instructions. Used for most asynchronous payment channels.
va_numbers
Array object	Virtual Account informations that only appear in bank_transfer using va except echanel, permata va. Possible values: [{ bank: <bank>, va_number: <va_number> }]