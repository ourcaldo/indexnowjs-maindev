Hi Replit, so as you see I have webapp which is IndexNow a 3rd party to request to GSC API to index a link. This webapp is same and inspirated by Instant Indexing wordpress plugin by RankMath.

So, as this webapp is on development stage and for personal use only. I need you to focus to enhance and fix some problem in dashboard and panel.

Before you do make the changes, I need you to do a deep dive into the codebase, so you do have better understanding about this webapp, the current stage and feature and the obstacles.

Before we more in-deepth about this project. Please take time to read all information in replit.md because there's a lot important things that you should know.

Before, we already made plan in plan.md and I ask you to make dashboard for admin to manage entire side. But, when I login with super_admin role, there's error like this and I need you to fix it.

Please make sure you're read the replit.md to get current latest tables and column.

Before, I ask you to enhance the packages for the user with these commands:

'''
Please read this feedback:

Daily URL is still 0/xx even service account is already correct. You must get daily quota (used) in tables "indb_google_quota_usage" column "requests_successful" which is used quota for daily read replit.md. But, the current is just show data like this, so you may need to add user id so we can pull data from this table

INSERT INTO "public"."indb_google_quota_usage" ("id", "service_account_id", "date", "requests_made", "requests_successful", "requests_failed", "last_request_at", "created_at", "updated_at") VALUES ('3b246357-8ddf-4152-b470-009220848db9', '35e436ba-53af-4464-b80c-c3fb0c18bf98', '2025-07-23', '45', '45', '0', '2025-07-23 17:32:10.049+00', '2025-07-23 07:35:06.289+00', '2025-07-23 17:32:10.191306+00'), ('cbb07c03-c812-4ca9-a6c9-c936f5deedaf', '35e436ba-53af-4464-b80c-c3fb0c18bf98', '2025-07-24', '11', '11', '0', '2025-07-24 16:58:06.88+00', '2025-07-24 14:47:06.202+00', '2025-07-24 16:58:07.010958+00'), ('ec82fa8f-9029-469b-b105-0bdbc6e7f0d3', '35e436ba-53af-4464-b80c-c3fb0c18bf98', '2025-07-25', '101', '101', '0', '2025-07-25 19:44:06.587+00', '2025-07-25 19:37:01.595+00', '2025-07-25 19:44:06.612095+00');

Or, you can use index "user_quota_summary" which have data like:

INSERT INTO "public"."user_quota_summary" ("user_id", "total_quota_used", "service_account_count", "total_quota_limit") VALUES ('915f50e5-0902-466a-b1af-bdf19d789722', '101', '1', '200');

Use best approach, if you need to update/add data related to database, give me the SQL queries

On the other side, when i try free plan user which already have 1 service account, I still can add another service account, so you need to fix this limitation.

Make sure to read replit.md (IMPORTANT AND MUST)
'''

But, after you changes a code and ask me to run these SQL:
-- Database fix for quota tracking and user linkage
-- This script updates the user_quota_summary view to properly calculate daily quota usage

-- First, ensure the user_quota_summary view calculates real quota usage
DROP VIEW IF EXISTS user_quota_summary;

CREATE VIEW user_quota_summary AS
SELECT 
    up.user_id,
    COALESCE(daily_usage.total_quota_used, 0) AS total_quota_used,
    COALESCE(sa_count.service_account_count, 0) AS service_account_count,
    COALESCE(sa_limits.total_quota_limit, 0) AS total_quota_limit
FROM indb_auth_user_profiles up
LEFT JOIN (
    -- Calculate daily quota usage from actual Google API requests
    SELECT 
        sa.user_id,
        SUM(qu.requests_successful) AS total_quota_used
    FROM indb_google_quota_usage qu
    INNER JOIN indb_google_service_accounts sa ON qu.service_account_id = sa.id
    WHERE qu.date = CURRENT_DATE
    GROUP BY sa.user_id
) daily_usage ON up.user_id = daily_usage.user_id
LEFT JOIN (
    -- Count active service accounts per user
    SELECT 
        user_id,
        COUNT(*) AS service_account_count
    FROM indb_google_service_accounts
    WHERE is_active = true
    GROUP BY user_id
) sa_count ON up.user_id = sa_count.user_id
LEFT JOIN (
    -- Calculate total quota limits per user
    SELECT 
        user_id,
        SUM(daily_quota_limit) AS total_quota_limit
    FROM indb_google_service_accounts
    WHERE is_active = true
    GROUP BY user_id
) sa_limits ON up.user_id = sa_limits.user_id;

-- Grant proper permissions to the view
GRANT SELECT ON user_quota_summary TO authenticated;
GRANT SELECT ON user_quota_summary TO service_role;

-- Create index on user_id for better performance
CREATE INDEX IF NOT EXISTS idx_user_quota_summary_user_id 
ON indb_auth_user_profiles(user_id);

-- Ensure service accounts are properly linked to users in quota usage
-- Add index for better performance on quota calculations
CREATE INDEX IF NOT EXISTS idx_google_quota_usage_date_service_account 
ON indb_google_quota_usage(date, service_account_id);

CREATE INDEX IF NOT EXISTS idx_google_service_accounts_user_id_active 
ON indb_google_service_accounts(user_id, is_active);

-- Update any existing quota usage records to ensure data integrity
-- This is a safety measure to ensure all quota records are properly linked
UPDATE indb_google_quota_usage 
SET updated_at = NOW()
WHERE service_account_id IN (
    SELECT id FROM indb_google_service_accounts WHERE user_id IS NOT NULL
);

-- Ensure RLS policies allow proper access to quota data
ALTER TABLE indb_google_quota_usage ENABLE ROW LEVEL SECURITY;

-- Drop existing policies if they exist
DROP POLICY IF EXISTS "Users can view their own quota usage" ON indb_google_quota_usage;
DROP POLICY IF EXISTS "Service role has full access to quota usage" ON indb_google_quota_usage;

-- Create RLS policies for quota usage table
CREATE POLICY "Users can view their own quota usage" ON indb_google_quota_usage
    FOR SELECT
    USING (
        service_account_id IN (
            SELECT id FROM indb_google_service_accounts 
            WHERE user_id = auth.uid()
        )
    );

CREATE POLICY "Service role has full access to quota usage" ON indb_google_quota_usage
    FOR ALL
    USING (auth.role() = 'service_role');

-- Grant necessary permissions
GRANT SELECT ON indb_google_quota_usage TO authenticated;
GRANT ALL ON indb_google_quota_usage TO service_role;

-- Refresh the view statistics
ANALYZE indb_google_quota_usage;
ANALYZE indb_google_service_accounts;
ANALYZE indb_auth_user_profiles;

The problem isn't solved. Please take time to read this:
1. The problem about service account is SOLVED. user aleady can't add more than 1 service account
2. Daily quota in card and admin dashboard (single user detail page) isn't change. It's always 0/50 even I run a job and it's more than 50 Links, after 50 URLS, it's not appear the notification related to package limit.

This is current index for "user_quota_summary" that you use: "INSERT INTO "public"."user_quota_summary" ("user_id", "total_quota_used", "service_account_count", "total_quota_limit") VALUES ('915f50e5-0902-466a-b1af-bdf19d789722', '158', '1', '200'), ('bffbd6fe-c4aa-49bd-8e4f-325a5136cd6e', '0', '0', '0');"
