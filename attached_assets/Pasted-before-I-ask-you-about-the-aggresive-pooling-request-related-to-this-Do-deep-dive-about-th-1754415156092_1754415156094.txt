before, I ask you about the aggresive pooling request related to this:

'''
Do deep dive about this project again because I have question that you need to answer.

When I opened the user dashboard and see the network request, for each seconds I can see a GET request to this endpoint:
- https://base.indexnow.studio/auth/v1/user
{
    "id": "915f50e5-0902-466a-b1af-bdf19d789722",
    "aud": "authenticated",
    "role": "authenticated",
    "email": "aldodkris@gmail.com",
    "email_confirmed_at": "2025-07-21T15:03:15.040394Z",
    "phone": "",
    "confirmed_at": "2025-07-21T15:03:15.040394Z",
    "last_sign_in_at": "2025-08-05T15:23:52.280146Z",
    "app_metadata": {
        "provider": "email",
        "providers": [
            "email"
        ]
    },
    "user_metadata": {
        "email_verified": true
    },
    "identities": [
        {
            "identity_id": "9b1dc5fb-88c1-46db-9765-709f9c52d3d4",
            "id": "915f50e5-0902-466a-b1af-bdf19d789722",
            "user_id": "915f50e5-0902-466a-b1af-bdf19d789722",
            "identity_data": {
                "email": "aldodkris@gmail.com",
                "email_verified": false,
                "phone_verified": false,
                "sub": "915f50e5-0902-466a-b1af-bdf19d789722"
            },
            "provider": "email",
            "last_sign_in_at": "2025-07-21T15:03:15.038354Z",
            "created_at": "2025-07-21T15:03:15.0384Z",
            "updated_at": "2025-07-21T15:03:15.0384Z",
            "email": "aldodkris@gmail.com"
        }
    ],
    "created_at": "2025-07-21T15:03:15.036254Z",
    "updated_at": "2025-08-05T16:22:54.188626Z",
    "is_anonymous": false
}

- https://234bd126-093b-4063-ae09-92e55e9f0fb3-00-r99i4g17tk3i.pike.replit.dev/api/user/quota
{
    "quota": {
        "daily_quota_used": 0,
        "daily_quota_limit": -1,
        "is_unlimited": true,
        "quota_exhausted": false,
        "daily_limit_reached": false,
        "package_name": "Pro",
        "remaining_quota": -1,
        "total_quota_used": 0,
        "total_quota_limit": 400,
        "service_account_count": 2
    }
}

- https://234bd126-093b-4063-ae09-92e55e9f0fb3-00-r99i4g17tk3i.pike.replit.dev/api/notifications/service-account-quota
{"notifications":[]}

My question is, why it's always make request for every seconds, can we fucking get rid of its so it's not fucking annoy me, but it's must be not fucking affect the features of it's supposed to be. For example, that reqest is happen bcs of feature X, and I don't want fucking the request always fucking show up but I also don't want to delete/disab;e or affecting the feature X.

So, deep dive, answer my question and make a plan to fix it. No code changes needed yet, I need you to make the plan and everything that supposed I know
'''

Then, you answer:
Deep Dive Analysis: Constant API Polling Issue
I've identified the root cause of your annoying constant API requests. Here's what's happening:

The Problem
Your dashboard has 3 different components that are aggressively polling the same APIs every few seconds:

QuotaCard component - Polls /api/user/quota every 3 seconds
QuotaNotification component - Polls /api/user/quota every 3 seconds
ServiceAccountQuotaNotification component - Polls /api/notifications/service-account-quota every 5 seconds
Why This Is Happening
These components were designed for "real-time" quota monitoring to show:

Live quota usage updates
Instant notifications when quotas are exhausted
Real-time progress tracking during job execution
But the implementation is overly aggressive and inefficient because:

Multiple components are duplicating the same API calls
Polling continues even when user is inactive
No intelligent caching or data sharing between components
Polls even when no jobs are running (wasteful)
The Features These Support
Real-time quota display - Shows current daily usage vs limits
Quota exhaustion alerts - Warns when approaching/hitting limits
Service account quota notifications - Alerts for individual Google service account limits
Job monitoring - Updates progress during active indexing jobs
Solution Plan
Here's my comprehensive plan to eliminate the annoying requests while preserving ALL functionality:

Phase 1: Centralized State Management
Create a single useQuotaManager hook that consolidates all quota-related API calls
Implement intelligent polling that only fetches when needed
Add proper data sharing between components to eliminate duplicate requests
Phase 2: Smart Polling Strategy
When jobs are active: Poll every 10 seconds (reasonable for progress tracking)
When idle: Poll every 60 seconds (sufficient for quota monitoring)
When page not visible: Stop polling completely (use Page Visibility API)
After quota exhaustion: Stop polling until next day
Phase 3: Event-Driven Updates
Use WebSocket connections (already implemented) for real-time job updates
Only poll quota when receiving job completion events
Implement browser-level caching with proper invalidation
Phase 4: User Activity Detection
Detect user interaction and adjust polling frequency
Pause polling during inactivity periods
Resume intelligent polling on user return
Benefits of This Approach
✅ Eliminates annoying constant requests - Reduces from every 3 seconds to intelligent intervals
✅ Preserves all functionality - Quota monitoring, alerts, and real-time updates remain intact
✅ Improves performance - Less server load, better battery life, faster page responsiveness
✅ Better user experience - Clean network tab, reduced data usage
✅ Maintains accuracy - Still gets timely updates when they matter

Implementation Priority
Immediate fix: Increase polling intervals and add page visibility detection
Short term: Consolidate into single quota manager
Long term: Full event-driven architecture with WebSocket integration
This solution will make your network requests much cleaner while keeping all the quota monitoring and alert features you need for the IndexNow Pro application.

Then, I ask you to do the plan along with this added information from me:
Okay, in my opinion, the quota card component is only show in main dashboard, but when I open other page, it's the API still pooling?

Then, I'm not sure about the 2 of QuotaNotification components and ServiceAccountQuotaNotification components that pulls every x seconds.

So, I need you to fix it. Just call or fetch the API if the components is show or user wanna create a jobs (when daily quota or service account quota is limit then it can't create that jobs or something like that).

Then, while your plans is already cover it all, I want you to enhance the websockets, at the moment I want you to make sure everything that needed realtime update is use websocket, not pooling.
Also, the current websocket is always change, which is it's just connected to websocket if user is visited specific page. My question is, can we do on whole all page? So, if user open and session is active, user is subscribed to the websocket, and when user move or explore the page the websocket is still active and it's not subscrbe to other websocket, bcs we already do it at the first place.


And after you do the changes, can you deep dive and check it all again to make sure that all is covered and there's no features on this project that affected by this changes.

