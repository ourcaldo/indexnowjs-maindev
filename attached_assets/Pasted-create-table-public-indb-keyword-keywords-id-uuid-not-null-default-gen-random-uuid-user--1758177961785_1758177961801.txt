create table public.indb_keyword_keywords (
  id uuid not null default gen_random_uuid (),
  user_id uuid not null,
  domain_id uuid not null,
  keyword text not null,
  device_type text not null default 'desktop'::text,
  country_id uuid not null,
  tags text[] null default '{}'::text[],
  is_active boolean not null default true,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  last_check_date date null,
  keyword_bank_id uuid null,
  search_volume integer null,
  cpc numeric(10, 2) null,
  competition numeric(3, 2) null,
  difficulty integer null,
  keyword_intent text null,
  history_trend jsonb null,
  intelligence_updated_at timestamp with time zone null,
  constraint indb_keyword_keywords_pkey primary key (id),
  constraint indb_keyword_keywords_unique unique (
    user_id,
    domain_id,
    keyword,
    device_type,
    country_id
  ),
  constraint fk_keyword_bank foreign KEY (keyword_bank_id) references indb_keyword_bank (id) on delete set null,
  constraint indb_keyword_keywords_domain_id_fkey foreign KEY (domain_id) references indb_keyword_domains (id) on delete CASCADE,
  constraint indb_keyword_keywords_country_id_fkey foreign KEY (country_id) references indb_keyword_countries (id) on delete CASCADE,
  constraint indb_keyword_keywords_user_id_fkey foreign KEY (user_id) references auth.users (id) on delete CASCADE,
  constraint indb_keyword_keywords_device_type_check check (
    (
      device_type = any (array['desktop'::text, 'mobile'::text])
    )
  )
) TABLESPACE pg_default;

create index IF not exists idx_indb_keyword_keywords_bank_id on public.indb_keyword_keywords using btree (keyword_bank_id) TABLESPACE pg_default;

create index IF not exists idx_indb_keyword_keywords_search_volume on public.indb_keyword_keywords using btree (search_volume) TABLESPACE pg_default;

create index IF not exists idx_indb_keyword_keywords_difficulty on public.indb_keyword_keywords using btree (difficulty) TABLESPACE pg_default;

create index IF not exists idx_keyword_last_check_date on public.indb_keyword_keywords using btree (last_check_date, is_active) TABLESPACE pg_default;

create index IF not exists idx_keyword_keywords_user_id on public.indb_keyword_keywords using btree (user_id) TABLESPACE pg_default;

create index IF not exists idx_keyword_keywords_domain_id on public.indb_keyword_keywords using btree (domain_id) TABLESPACE pg_default;

create index IF not exists idx_keyword_keywords_country_id on public.indb_keyword_keywords using btree (country_id) TABLESPACE pg_default;

create index IF not exists idx_keyword_keywords_device on public.indb_keyword_keywords using btree (device_type) TABLESPACE pg_default;

create index IF not exists idx_keyword_keywords_active on public.indb_keyword_keywords using btree (is_active) TABLESPACE pg_default;

create index IF not exists idx_keyword_keywords_tags on public.indb_keyword_keywords using gin (tags) TABLESPACE pg_default;

create trigger trigger_link_keyword_to_bank BEFORE INSERT
or
update on indb_keyword_keywords for EACH row
execute FUNCTION link_keyword_to_bank ();

create trigger keyword_usage_trigger
after INSERT
or DELETE
or
update on indb_keyword_keywords for EACH row
execute FUNCTION update_keyword_usage ();