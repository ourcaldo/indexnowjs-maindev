-- Create table for storing OTP codes (following indb_security collection)
CREATE TABLE IF NOT EXISTS indb_security_otp_codes (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  user_id UUID NOT NULL REFERENCES auth.users(id) ON DELETE CASCADE,
  email TEXT NOT NULL,
  otp_code VARCHAR(6) NOT NULL,
  otp_type TEXT NOT NULL DEFAULT 'login_mfa' CHECK (otp_type IN ('login_mfa', 'password_reset', 'email_verification')),
  is_used BOOLEAN DEFAULT FALSE,
  attempts_count INTEGER DEFAULT 0,
  max_attempts INTEGER DEFAULT 3,
  expires_at TIMESTAMP WITH TIME ZONE NOT NULL,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Create index for efficient queries
CREATE INDEX IF NOT EXISTS idx_otp_codes_user_email ON indb_security_otp_codes(user_id, email);
CREATE INDEX IF NOT EXISTS idx_otp_codes_email_otp ON indb_security_otp_codes(email, otp_code) WHERE is_used = FALSE;
CREATE INDEX IF NOT EXISTS idx_otp_codes_expires_at ON indb_security_otp_codes(expires_at);

-- Enable RLS (Row Level Security)
ALTER TABLE indb_security_otp_codes ENABLE ROW LEVEL SECURITY;

-- Create RLS policy for users to access only their own OTP codes
CREATE POLICY "Users can access only their own OTP codes" ON indb_security_otp_codes
  FOR ALL USING (auth.uid() = user_id);

-- Create policy for service role to manage all OTP codes
CREATE POLICY "Service role can manage all OTP codes" ON indb_security_otp_codes
  FOR ALL USING (auth.role() = 'service_role');

-- Add trigger for updated_at
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER update_otp_codes_updated_at BEFORE UPDATE
ON indb_security_otp_codes FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

-- Clean up expired OTP codes (run this manually or set up as a scheduled job)
-- DELETE FROM indb_security_otp_codes WHERE expires_at < NOW() AND created_at < NOW() - INTERVAL '1 day';