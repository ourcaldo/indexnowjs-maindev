/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/debug-auth/route";
exports.ids = ["app/api/debug-auth/route"];
exports.modules = {

/***/ "(rsc)/./app/api/debug-auth/route.ts":
/*!*************************************!*\
  !*** ./app/api/debug-auth/route.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../lib/supabase */ \"(rsc)/./lib/supabase.ts\");\n/* harmony import */ var _lib_google_auth_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../lib/google-auth-service */ \"(rsc)/./lib/google-auth-service.ts\");\n\n\nasync function GET(request) {\n    try {\n        console.log('üîç Starting manual debug of Google Auth process...');\n        // Get the service account that's causing issues\n        const { data: serviceAccount, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabaseAdmin.from('indb_google_service_accounts').select('*').eq('id', '91f356fe-2730-46c0-86a4-be81d8f1f6b6').single();\n        if (error || !serviceAccount) {\n            return Response.json({\n                error: 'Service account not found',\n                details: error?.message\n            });\n        }\n        console.log('üîç DEBUG - Service account found, attempting to get access token...');\n        // This will trigger all the detailed debugging we added\n        const googleAuth = _lib_google_auth_service__WEBPACK_IMPORTED_MODULE_1__.GoogleAuthService.getInstance();\n        const accessToken = await googleAuth.getAccessToken(serviceAccount.id);\n        return Response.json({\n            success: accessToken !== null,\n            hasAccessToken: !!accessToken,\n            tokenLength: accessToken?.length || 0,\n            message: accessToken ? 'Successfully obtained access token with debugging' : 'Failed to obtain access token - check console logs for detailed debugging'\n        });\n    } catch (error) {\n        console.error('Error in debug-auth:', error);\n        return Response.json({\n            error: 'Debug auth failed',\n            details: error instanceof Error ? error.message : 'Unknown error'\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL2RlYnVnLWF1dGgvcm91dGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ3NEO0FBQ2U7QUFFOUQsZUFBZUUsSUFBSUMsT0FBb0I7SUFDNUMsSUFBSTtRQUNGQyxRQUFRQyxHQUFHLENBQUM7UUFFWixnREFBZ0Q7UUFDaEQsTUFBTSxFQUFFQyxNQUFNQyxjQUFjLEVBQUVDLEtBQUssRUFBRSxHQUFHLE1BQU1SLHdEQUFhQSxDQUN4RFMsSUFBSSxDQUFDLGdDQUNMQyxNQUFNLENBQUMsS0FDUEMsRUFBRSxDQUFDLE1BQU0sd0NBQ1RDLE1BQU07UUFFVCxJQUFJSixTQUFTLENBQUNELGdCQUFnQjtZQUM1QixPQUFPTSxTQUFTQyxJQUFJLENBQUM7Z0JBQ25CTixPQUFPO2dCQUNQTyxTQUFTUCxPQUFPUTtZQUNsQjtRQUNGO1FBRUFaLFFBQVFDLEdBQUcsQ0FBQztRQUVaLHdEQUF3RDtRQUN4RCxNQUFNWSxhQUFhaEIsdUVBQWlCQSxDQUFDaUIsV0FBVztRQUNoRCxNQUFNQyxjQUFjLE1BQU1GLFdBQVdHLGNBQWMsQ0FBQ2IsZUFBZWMsRUFBRTtRQUVyRSxPQUFPUixTQUFTQyxJQUFJLENBQUM7WUFDbkJRLFNBQVNILGdCQUFnQjtZQUN6QkksZ0JBQWdCLENBQUMsQ0FBQ0o7WUFDbEJLLGFBQWFMLGFBQWFNLFVBQVU7WUFDcENULFNBQVNHLGNBQ0wsc0RBQ0E7UUFDTjtJQUVGLEVBQUUsT0FBT1gsT0FBTztRQUNkSixRQUFRSSxLQUFLLENBQUMsd0JBQXdCQTtRQUN0QyxPQUFPSyxTQUFTQyxJQUFJLENBQUM7WUFDbkJOLE9BQU87WUFDUE8sU0FBU1AsaUJBQWlCa0IsUUFBUWxCLE1BQU1RLE9BQU8sR0FBRztRQUNwRCxHQUFHO1lBQUVXLFFBQVE7UUFBSTtJQUNuQjtBQUNGIiwic291cmNlcyI6WyIvaG9tZS9ydW5uZXIvd29ya3NwYWNlL2FwcC9hcGkvZGVidWctYXV0aC9yb3V0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVxdWVzdCB9IGZyb20gJ25leHQvc2VydmVyJztcbmltcG9ydCB7IHN1cGFiYXNlQWRtaW4gfSBmcm9tICcuLi8uLi8uLi9saWIvc3VwYWJhc2UnO1xuaW1wb3J0IHsgR29vZ2xlQXV0aFNlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi9saWIvZ29vZ2xlLWF1dGgtc2VydmljZSc7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcbiAgdHJ5IHtcbiAgICBjb25zb2xlLmxvZygn8J+UjSBTdGFydGluZyBtYW51YWwgZGVidWcgb2YgR29vZ2xlIEF1dGggcHJvY2Vzcy4uLicpO1xuXG4gICAgLy8gR2V0IHRoZSBzZXJ2aWNlIGFjY291bnQgdGhhdCdzIGNhdXNpbmcgaXNzdWVzXG4gICAgY29uc3QgeyBkYXRhOiBzZXJ2aWNlQWNjb3VudCwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlQWRtaW5cbiAgICAgIC5mcm9tKCdpbmRiX2dvb2dsZV9zZXJ2aWNlX2FjY291bnRzJylcbiAgICAgIC5zZWxlY3QoJyonKVxuICAgICAgLmVxKCdpZCcsICc5MWYzNTZmZS0yNzMwLTQ2YzAtODZhNC1iZTgxZDhmMWY2YjYnKVxuICAgICAgLnNpbmdsZSgpO1xuXG4gICAgaWYgKGVycm9yIHx8ICFzZXJ2aWNlQWNjb3VudCkge1xuICAgICAgcmV0dXJuIFJlc3BvbnNlLmpzb24oeyBcbiAgICAgICAgZXJyb3I6ICdTZXJ2aWNlIGFjY291bnQgbm90IGZvdW5kJyxcbiAgICAgICAgZGV0YWlsczogZXJyb3I/Lm1lc3NhZ2VcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGNvbnNvbGUubG9nKCfwn5SNIERFQlVHIC0gU2VydmljZSBhY2NvdW50IGZvdW5kLCBhdHRlbXB0aW5nIHRvIGdldCBhY2Nlc3MgdG9rZW4uLi4nKTtcbiAgICBcbiAgICAvLyBUaGlzIHdpbGwgdHJpZ2dlciBhbGwgdGhlIGRldGFpbGVkIGRlYnVnZ2luZyB3ZSBhZGRlZFxuICAgIGNvbnN0IGdvb2dsZUF1dGggPSBHb29nbGVBdXRoU2VydmljZS5nZXRJbnN0YW5jZSgpO1xuICAgIGNvbnN0IGFjY2Vzc1Rva2VuID0gYXdhaXQgZ29vZ2xlQXV0aC5nZXRBY2Nlc3NUb2tlbihzZXJ2aWNlQWNjb3VudC5pZCk7XG5cbiAgICByZXR1cm4gUmVzcG9uc2UuanNvbih7XG4gICAgICBzdWNjZXNzOiBhY2Nlc3NUb2tlbiAhPT0gbnVsbCxcbiAgICAgIGhhc0FjY2Vzc1Rva2VuOiAhIWFjY2Vzc1Rva2VuLFxuICAgICAgdG9rZW5MZW5ndGg6IGFjY2Vzc1Rva2VuPy5sZW5ndGggfHwgMCxcbiAgICAgIG1lc3NhZ2U6IGFjY2Vzc1Rva2VuIFxuICAgICAgICA/ICdTdWNjZXNzZnVsbHkgb2J0YWluZWQgYWNjZXNzIHRva2VuIHdpdGggZGVidWdnaW5nJ1xuICAgICAgICA6ICdGYWlsZWQgdG8gb2J0YWluIGFjY2VzcyB0b2tlbiAtIGNoZWNrIGNvbnNvbGUgbG9ncyBmb3IgZGV0YWlsZWQgZGVidWdnaW5nJ1xuICAgIH0pO1xuXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgaW4gZGVidWctYXV0aDonLCBlcnJvcik7XG4gICAgcmV0dXJuIFJlc3BvbnNlLmpzb24oeyBcbiAgICAgIGVycm9yOiAnRGVidWcgYXV0aCBmYWlsZWQnLFxuICAgICAgZGV0YWlsczogZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiAnVW5rbm93biBlcnJvcidcbiAgICB9LCB7IHN0YXR1czogNTAwIH0pO1xuICB9XG59Il0sIm5hbWVzIjpbInN1cGFiYXNlQWRtaW4iLCJHb29nbGVBdXRoU2VydmljZSIsIkdFVCIsInJlcXVlc3QiLCJjb25zb2xlIiwibG9nIiwiZGF0YSIsInNlcnZpY2VBY2NvdW50IiwiZXJyb3IiLCJmcm9tIiwic2VsZWN0IiwiZXEiLCJzaW5nbGUiLCJSZXNwb25zZSIsImpzb24iLCJkZXRhaWxzIiwibWVzc2FnZSIsImdvb2dsZUF1dGgiLCJnZXRJbnN0YW5jZSIsImFjY2Vzc1Rva2VuIiwiZ2V0QWNjZXNzVG9rZW4iLCJpZCIsInN1Y2Nlc3MiLCJoYXNBY2Nlc3NUb2tlbiIsInRva2VuTGVuZ3RoIiwibGVuZ3RoIiwiRXJyb3IiLCJzdGF0dXMiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/api/debug-auth/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/encryption.ts":
/*!***************************!*\
  !*** ./lib/encryption.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EncryptionService: () => (/* binding */ EncryptionService)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);\n\n/**\n * Simple encryption utility for securing sensitive data\n * Uses AES-256-CBC with proper IV handling\n */ class EncryptionService {\n    static{\n        this.ALGORITHM = 'aes-256-cbc';\n    }\n    static{\n        this.IV_LENGTH = 16;\n    }\n    static getEncryptionKey() {\n        const key = process.env.ENCRYPTION_KEY;\n        if (!key) {\n            throw new Error('ENCRYPTION_KEY environment variable is required');\n        }\n        if (key.length !== 32) {\n            throw new Error('ENCRYPTION_KEY must be exactly 32 characters long');\n        }\n        return Buffer.from(key, 'utf8');\n    }\n    /**\n   * Encrypt sensitive data\n   * Format: IV:EncryptedData\n   */ static encrypt(text) {\n        try {\n            const key = this.getEncryptionKey();\n            const iv = crypto__WEBPACK_IMPORTED_MODULE_0___default().randomBytes(this.IV_LENGTH);\n            const cipher = crypto__WEBPACK_IMPORTED_MODULE_0___default().createCipheriv(this.ALGORITHM, key, iv);\n            let encrypted = cipher.update(text, 'utf8', 'hex');\n            encrypted += cipher.final('hex');\n            return iv.toString('hex') + ':' + encrypted;\n        } catch (error) {\n            console.error('Encryption error:', error);\n            throw new Error('Failed to encrypt data');\n        }\n    }\n    /**\n   * Decrypt sensitive data\n   * Expects format: IV:EncryptedData\n   */ static decrypt(encryptedText) {\n        try {\n            console.log('üîì DEBUG - Starting decryption process...');\n            console.log('- Input encrypted text length:', encryptedText.length);\n            console.log('- Input preview:', encryptedText.substring(0, 100) + '...');\n            const key = this.getEncryptionKey();\n            console.log('- Encryption key length:', key.length);\n            console.log('- Encryption key preview:', key.toString('hex').substring(0, 16) + '...');\n            const parts = encryptedText.split(':');\n            console.log('- Split parts count:', parts.length);\n            if (parts.length !== 2) {\n                console.error('‚ùå DEBUG - Invalid format, expected IV:EncryptedData but got', parts.length, 'parts');\n                throw new Error('Invalid encrypted data format - expected IV:EncryptedData');\n            }\n            console.log('- IV part (hex):', parts[0]);\n            console.log('- Encrypted data part length:', parts[1].length);\n            console.log('- Encrypted data preview:', parts[1].substring(0, 50) + '...');\n            const iv = Buffer.from(parts[0], 'hex');\n            console.log('- IV buffer length:', iv.length);\n            console.log('- IV buffer:', iv.toString('hex'));\n            const encryptedData = parts[1];\n            console.log('- Creating decipher with algorithm:', this.ALGORITHM);\n            const decipher = crypto__WEBPACK_IMPORTED_MODULE_0___default().createDecipheriv(this.ALGORITHM, key, iv);\n            console.log('- Updating decipher...');\n            let decrypted = decipher.update(encryptedData, 'hex', 'utf8');\n            console.log('- First update result length:', decrypted.length);\n            console.log('- Finalizing decipher...');\n            decrypted += decipher.final('utf8');\n            console.log('- Final decrypted length:', decrypted.length);\n            console.log('- Decrypted preview:', decrypted.substring(0, 100) + '...');\n            return decrypted;\n        } catch (error) {\n            console.error('‚ùå Decryption error details:', error);\n            console.error('- Error name:', error instanceof Error ? error.name : 'Unknown');\n            console.error('- Error message:', error instanceof Error ? error.message : String(error));\n            console.error('- Error stack:', error instanceof Error ? error.stack : 'No stack');\n            throw new Error('Failed to decrypt data');\n        }\n    }\n    /**\n   * Test if encrypted data can be decrypted with current key\n   */ static testDecryption(encryptedText) {\n        try {\n            this.decrypt(encryptedText);\n            return true;\n        } catch (error) {\n            return false;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvZW5jcnlwdGlvbi50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNEI7QUFFNUI7OztDQUdDLEdBQ00sTUFBTUM7O2FBQ2FDLFlBQVk7OzthQUNaQyxZQUFZOztJQUVwQyxPQUFlQyxtQkFBMkI7UUFDeEMsTUFBTUMsTUFBTUMsUUFBUUMsR0FBRyxDQUFDQyxjQUFjO1FBQ3RDLElBQUksQ0FBQ0gsS0FBSztZQUNSLE1BQU0sSUFBSUksTUFBTTtRQUNsQjtRQUNBLElBQUlKLElBQUlLLE1BQU0sS0FBSyxJQUFJO1lBQ3JCLE1BQU0sSUFBSUQsTUFBTTtRQUNsQjtRQUNBLE9BQU9FLE9BQU9DLElBQUksQ0FBQ1AsS0FBSztJQUMxQjtJQUVBOzs7R0FHQyxHQUNELE9BQU9RLFFBQVFDLElBQVksRUFBVTtRQUNuQyxJQUFJO1lBQ0YsTUFBTVQsTUFBTSxJQUFJLENBQUNELGdCQUFnQjtZQUNqQyxNQUFNVyxLQUFLZix5REFBa0IsQ0FBQyxJQUFJLENBQUNHLFNBQVM7WUFDNUMsTUFBTWMsU0FBU2pCLDREQUFxQixDQUFDLElBQUksQ0FBQ0UsU0FBUyxFQUFFRyxLQUFLVTtZQUUxRCxJQUFJSSxZQUFZRixPQUFPRyxNQUFNLENBQUNOLE1BQU0sUUFBUTtZQUM1Q0ssYUFBYUYsT0FBT0ksS0FBSyxDQUFDO1lBRTFCLE9BQU9OLEdBQUdPLFFBQVEsQ0FBQyxTQUFTLE1BQU1IO1FBQ3BDLEVBQUUsT0FBT0ksT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMscUJBQXFCQTtZQUNuQyxNQUFNLElBQUlkLE1BQU07UUFDbEI7SUFDRjtJQUVBOzs7R0FHQyxHQUNELE9BQU9nQixRQUFRQyxhQUFxQixFQUFVO1FBQzVDLElBQUk7WUFDRkYsUUFBUUcsR0FBRyxDQUFDO1lBQ1pILFFBQVFHLEdBQUcsQ0FBQyxrQ0FBa0NELGNBQWNoQixNQUFNO1lBQ2xFYyxRQUFRRyxHQUFHLENBQUMsb0JBQW9CRCxjQUFjRSxTQUFTLENBQUMsR0FBRyxPQUFPO1lBRWxFLE1BQU12QixNQUFNLElBQUksQ0FBQ0QsZ0JBQWdCO1lBQ2pDb0IsUUFBUUcsR0FBRyxDQUFDLDRCQUE0QnRCLElBQUlLLE1BQU07WUFDbERjLFFBQVFHLEdBQUcsQ0FBQyw2QkFBNkJ0QixJQUFJaUIsUUFBUSxDQUFDLE9BQU9NLFNBQVMsQ0FBQyxHQUFHLE1BQU07WUFFaEYsTUFBTUMsUUFBUUgsY0FBY0ksS0FBSyxDQUFDO1lBQ2xDTixRQUFRRyxHQUFHLENBQUMsd0JBQXdCRSxNQUFNbkIsTUFBTTtZQUVoRCxJQUFJbUIsTUFBTW5CLE1BQU0sS0FBSyxHQUFHO2dCQUN0QmMsUUFBUUQsS0FBSyxDQUFDLCtEQUErRE0sTUFBTW5CLE1BQU0sRUFBRTtnQkFDM0YsTUFBTSxJQUFJRCxNQUFNO1lBQ2xCO1lBRUFlLFFBQVFHLEdBQUcsQ0FBQyxvQkFBb0JFLEtBQUssQ0FBQyxFQUFFO1lBQ3hDTCxRQUFRRyxHQUFHLENBQUMsaUNBQWlDRSxLQUFLLENBQUMsRUFBRSxDQUFDbkIsTUFBTTtZQUM1RGMsUUFBUUcsR0FBRyxDQUFDLDZCQUE2QkUsS0FBSyxDQUFDLEVBQUUsQ0FBQ0QsU0FBUyxDQUFDLEdBQUcsTUFBTTtZQUVyRSxNQUFNYixLQUFLSixPQUFPQyxJQUFJLENBQUNpQixLQUFLLENBQUMsRUFBRSxFQUFFO1lBQ2pDTCxRQUFRRyxHQUFHLENBQUMsdUJBQXVCWixHQUFHTCxNQUFNO1lBQzVDYyxRQUFRRyxHQUFHLENBQUMsZ0JBQWdCWixHQUFHTyxRQUFRLENBQUM7WUFFeEMsTUFBTVMsZ0JBQWdCRixLQUFLLENBQUMsRUFBRTtZQUU5QkwsUUFBUUcsR0FBRyxDQUFDLHVDQUF1QyxJQUFJLENBQUN6QixTQUFTO1lBQ2pFLE1BQU04QixXQUFXaEMsOERBQXVCLENBQUMsSUFBSSxDQUFDRSxTQUFTLEVBQUVHLEtBQUtVO1lBRTlEUyxRQUFRRyxHQUFHLENBQUM7WUFDWixJQUFJTyxZQUFZRixTQUFTWixNQUFNLENBQUNXLGVBQWUsT0FBTztZQUN0RFAsUUFBUUcsR0FBRyxDQUFDLGlDQUFpQ08sVUFBVXhCLE1BQU07WUFFN0RjLFFBQVFHLEdBQUcsQ0FBQztZQUNaTyxhQUFhRixTQUFTWCxLQUFLLENBQUM7WUFDNUJHLFFBQVFHLEdBQUcsQ0FBQyw2QkFBNkJPLFVBQVV4QixNQUFNO1lBQ3pEYyxRQUFRRyxHQUFHLENBQUMsd0JBQXdCTyxVQUFVTixTQUFTLENBQUMsR0FBRyxPQUFPO1lBRWxFLE9BQU9NO1FBQ1QsRUFBRSxPQUFPWCxPQUFPO1lBQ2RDLFFBQVFELEtBQUssQ0FBQywrQkFBK0JBO1lBQzdDQyxRQUFRRCxLQUFLLENBQUMsaUJBQWlCQSxpQkFBaUJkLFFBQVFjLE1BQU1ZLElBQUksR0FBRztZQUNyRVgsUUFBUUQsS0FBSyxDQUFDLG9CQUFvQkEsaUJBQWlCZCxRQUFRYyxNQUFNYSxPQUFPLEdBQUdDLE9BQU9kO1lBQ2xGQyxRQUFRRCxLQUFLLENBQUMsa0JBQWtCQSxpQkFBaUJkLFFBQVFjLE1BQU1lLEtBQUssR0FBRztZQUN2RSxNQUFNLElBQUk3QixNQUFNO1FBQ2xCO0lBQ0Y7SUFFQTs7R0FFQyxHQUNELE9BQU84QixlQUFlYixhQUFxQixFQUFXO1FBQ3BELElBQUk7WUFDRixJQUFJLENBQUNELE9BQU8sQ0FBQ0M7WUFDYixPQUFPO1FBQ1QsRUFBRSxPQUFPSCxPQUFPO1lBQ2QsT0FBTztRQUNUO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsiL2hvbWUvcnVubmVyL3dvcmtzcGFjZS9saWIvZW5jcnlwdGlvbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY3J5cHRvIGZyb20gJ2NyeXB0byc7XG5cbi8qKlxuICogU2ltcGxlIGVuY3J5cHRpb24gdXRpbGl0eSBmb3Igc2VjdXJpbmcgc2Vuc2l0aXZlIGRhdGFcbiAqIFVzZXMgQUVTLTI1Ni1DQkMgd2l0aCBwcm9wZXIgSVYgaGFuZGxpbmdcbiAqL1xuZXhwb3J0IGNsYXNzIEVuY3J5cHRpb25TZXJ2aWNlIHtcbiAgcHJpdmF0ZSBzdGF0aWMgcmVhZG9ubHkgQUxHT1JJVEhNID0gJ2Flcy0yNTYtY2JjJztcbiAgcHJpdmF0ZSBzdGF0aWMgcmVhZG9ubHkgSVZfTEVOR1RIID0gMTY7XG4gIFxuICBwcml2YXRlIHN0YXRpYyBnZXRFbmNyeXB0aW9uS2V5KCk6IEJ1ZmZlciB7XG4gICAgY29uc3Qga2V5ID0gcHJvY2Vzcy5lbnYuRU5DUllQVElPTl9LRVk7XG4gICAgaWYgKCFrZXkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignRU5DUllQVElPTl9LRVkgZW52aXJvbm1lbnQgdmFyaWFibGUgaXMgcmVxdWlyZWQnKTtcbiAgICB9XG4gICAgaWYgKGtleS5sZW5ndGggIT09IDMyKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0VOQ1JZUFRJT05fS0VZIG11c3QgYmUgZXhhY3RseSAzMiBjaGFyYWN0ZXJzIGxvbmcnKTtcbiAgICB9XG4gICAgcmV0dXJuIEJ1ZmZlci5mcm9tKGtleSwgJ3V0ZjgnKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBFbmNyeXB0IHNlbnNpdGl2ZSBkYXRhXG4gICAqIEZvcm1hdDogSVY6RW5jcnlwdGVkRGF0YVxuICAgKi9cbiAgc3RhdGljIGVuY3J5cHQodGV4dDogc3RyaW5nKTogc3RyaW5nIHtcbiAgICB0cnkge1xuICAgICAgY29uc3Qga2V5ID0gdGhpcy5nZXRFbmNyeXB0aW9uS2V5KCk7XG4gICAgICBjb25zdCBpdiA9IGNyeXB0by5yYW5kb21CeXRlcyh0aGlzLklWX0xFTkdUSCk7XG4gICAgICBjb25zdCBjaXBoZXIgPSBjcnlwdG8uY3JlYXRlQ2lwaGVyaXYodGhpcy5BTEdPUklUSE0sIGtleSwgaXYpO1xuICAgICAgXG4gICAgICBsZXQgZW5jcnlwdGVkID0gY2lwaGVyLnVwZGF0ZSh0ZXh0LCAndXRmOCcsICdoZXgnKTtcbiAgICAgIGVuY3J5cHRlZCArPSBjaXBoZXIuZmluYWwoJ2hleCcpO1xuICAgICAgXG4gICAgICByZXR1cm4gaXYudG9TdHJpbmcoJ2hleCcpICsgJzonICsgZW5jcnlwdGVkO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFbmNyeXB0aW9uIGVycm9yOicsIGVycm9yKTtcbiAgICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGVuY3J5cHQgZGF0YScpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBEZWNyeXB0IHNlbnNpdGl2ZSBkYXRhXG4gICAqIEV4cGVjdHMgZm9ybWF0OiBJVjpFbmNyeXB0ZWREYXRhXG4gICAqL1xuICBzdGF0aWMgZGVjcnlwdChlbmNyeXB0ZWRUZXh0OiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIHRyeSB7XG4gICAgICBjb25zb2xlLmxvZygn8J+UkyBERUJVRyAtIFN0YXJ0aW5nIGRlY3J5cHRpb24gcHJvY2Vzcy4uLicpO1xuICAgICAgY29uc29sZS5sb2coJy0gSW5wdXQgZW5jcnlwdGVkIHRleHQgbGVuZ3RoOicsIGVuY3J5cHRlZFRleHQubGVuZ3RoKTtcbiAgICAgIGNvbnNvbGUubG9nKCctIElucHV0IHByZXZpZXc6JywgZW5jcnlwdGVkVGV4dC5zdWJzdHJpbmcoMCwgMTAwKSArICcuLi4nKTtcbiAgICAgIFxuICAgICAgY29uc3Qga2V5ID0gdGhpcy5nZXRFbmNyeXB0aW9uS2V5KCk7XG4gICAgICBjb25zb2xlLmxvZygnLSBFbmNyeXB0aW9uIGtleSBsZW5ndGg6Jywga2V5Lmxlbmd0aCk7XG4gICAgICBjb25zb2xlLmxvZygnLSBFbmNyeXB0aW9uIGtleSBwcmV2aWV3OicsIGtleS50b1N0cmluZygnaGV4Jykuc3Vic3RyaW5nKDAsIDE2KSArICcuLi4nKTtcbiAgICAgIFxuICAgICAgY29uc3QgcGFydHMgPSBlbmNyeXB0ZWRUZXh0LnNwbGl0KCc6Jyk7XG4gICAgICBjb25zb2xlLmxvZygnLSBTcGxpdCBwYXJ0cyBjb3VudDonLCBwYXJ0cy5sZW5ndGgpO1xuICAgICAgXG4gICAgICBpZiAocGFydHMubGVuZ3RoICE9PSAyKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBERUJVRyAtIEludmFsaWQgZm9ybWF0LCBleHBlY3RlZCBJVjpFbmNyeXB0ZWREYXRhIGJ1dCBnb3QnLCBwYXJ0cy5sZW5ndGgsICdwYXJ0cycpO1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgZW5jcnlwdGVkIGRhdGEgZm9ybWF0IC0gZXhwZWN0ZWQgSVY6RW5jcnlwdGVkRGF0YScpO1xuICAgICAgfVxuICAgICAgXG4gICAgICBjb25zb2xlLmxvZygnLSBJViBwYXJ0IChoZXgpOicsIHBhcnRzWzBdKTtcbiAgICAgIGNvbnNvbGUubG9nKCctIEVuY3J5cHRlZCBkYXRhIHBhcnQgbGVuZ3RoOicsIHBhcnRzWzFdLmxlbmd0aCk7XG4gICAgICBjb25zb2xlLmxvZygnLSBFbmNyeXB0ZWQgZGF0YSBwcmV2aWV3OicsIHBhcnRzWzFdLnN1YnN0cmluZygwLCA1MCkgKyAnLi4uJyk7XG4gICAgICBcbiAgICAgIGNvbnN0IGl2ID0gQnVmZmVyLmZyb20ocGFydHNbMF0sICdoZXgnKTtcbiAgICAgIGNvbnNvbGUubG9nKCctIElWIGJ1ZmZlciBsZW5ndGg6JywgaXYubGVuZ3RoKTtcbiAgICAgIGNvbnNvbGUubG9nKCctIElWIGJ1ZmZlcjonLCBpdi50b1N0cmluZygnaGV4JykpO1xuICAgICAgXG4gICAgICBjb25zdCBlbmNyeXB0ZWREYXRhID0gcGFydHNbMV07XG4gICAgICBcbiAgICAgIGNvbnNvbGUubG9nKCctIENyZWF0aW5nIGRlY2lwaGVyIHdpdGggYWxnb3JpdGhtOicsIHRoaXMuQUxHT1JJVEhNKTtcbiAgICAgIGNvbnN0IGRlY2lwaGVyID0gY3J5cHRvLmNyZWF0ZURlY2lwaGVyaXYodGhpcy5BTEdPUklUSE0sIGtleSwgaXYpO1xuICAgICAgXG4gICAgICBjb25zb2xlLmxvZygnLSBVcGRhdGluZyBkZWNpcGhlci4uLicpO1xuICAgICAgbGV0IGRlY3J5cHRlZCA9IGRlY2lwaGVyLnVwZGF0ZShlbmNyeXB0ZWREYXRhLCAnaGV4JywgJ3V0ZjgnKTtcbiAgICAgIGNvbnNvbGUubG9nKCctIEZpcnN0IHVwZGF0ZSByZXN1bHQgbGVuZ3RoOicsIGRlY3J5cHRlZC5sZW5ndGgpO1xuICAgICAgXG4gICAgICBjb25zb2xlLmxvZygnLSBGaW5hbGl6aW5nIGRlY2lwaGVyLi4uJyk7XG4gICAgICBkZWNyeXB0ZWQgKz0gZGVjaXBoZXIuZmluYWwoJ3V0ZjgnKTtcbiAgICAgIGNvbnNvbGUubG9nKCctIEZpbmFsIGRlY3J5cHRlZCBsZW5ndGg6JywgZGVjcnlwdGVkLmxlbmd0aCk7XG4gICAgICBjb25zb2xlLmxvZygnLSBEZWNyeXB0ZWQgcHJldmlldzonLCBkZWNyeXB0ZWQuc3Vic3RyaW5nKDAsIDEwMCkgKyAnLi4uJyk7XG4gICAgICBcbiAgICAgIHJldHVybiBkZWNyeXB0ZWQ7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBEZWNyeXB0aW9uIGVycm9yIGRldGFpbHM6JywgZXJyb3IpO1xuICAgICAgY29uc29sZS5lcnJvcignLSBFcnJvciBuYW1lOicsIGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5uYW1lIDogJ1Vua25vd24nKTtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJy0gRXJyb3IgbWVzc2FnZTonLCBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6IFN0cmluZyhlcnJvcikpO1xuICAgICAgY29uc29sZS5lcnJvcignLSBFcnJvciBzdGFjazonLCBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3Iuc3RhY2sgOiAnTm8gc3RhY2snKTtcbiAgICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGRlY3J5cHQgZGF0YScpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBUZXN0IGlmIGVuY3J5cHRlZCBkYXRhIGNhbiBiZSBkZWNyeXB0ZWQgd2l0aCBjdXJyZW50IGtleVxuICAgKi9cbiAgc3RhdGljIHRlc3REZWNyeXB0aW9uKGVuY3J5cHRlZFRleHQ6IHN0cmluZyk6IGJvb2xlYW4ge1xuICAgIHRyeSB7XG4gICAgICB0aGlzLmRlY3J5cHQoZW5jcnlwdGVkVGV4dCk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxufSJdLCJuYW1lcyI6WyJjcnlwdG8iLCJFbmNyeXB0aW9uU2VydmljZSIsIkFMR09SSVRITSIsIklWX0xFTkdUSCIsImdldEVuY3J5cHRpb25LZXkiLCJrZXkiLCJwcm9jZXNzIiwiZW52IiwiRU5DUllQVElPTl9LRVkiLCJFcnJvciIsImxlbmd0aCIsIkJ1ZmZlciIsImZyb20iLCJlbmNyeXB0IiwidGV4dCIsIml2IiwicmFuZG9tQnl0ZXMiLCJjaXBoZXIiLCJjcmVhdGVDaXBoZXJpdiIsImVuY3J5cHRlZCIsInVwZGF0ZSIsImZpbmFsIiwidG9TdHJpbmciLCJlcnJvciIsImNvbnNvbGUiLCJkZWNyeXB0IiwiZW5jcnlwdGVkVGV4dCIsImxvZyIsInN1YnN0cmluZyIsInBhcnRzIiwic3BsaXQiLCJlbmNyeXB0ZWREYXRhIiwiZGVjaXBoZXIiLCJjcmVhdGVEZWNpcGhlcml2IiwiZGVjcnlwdGVkIiwibmFtZSIsIm1lc3NhZ2UiLCJTdHJpbmciLCJzdGFjayIsInRlc3REZWNyeXB0aW9uIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/encryption.ts\n");

/***/ }),

/***/ "(rsc)/./lib/google-auth-service.ts":
/*!************************************!*\
  !*** ./lib/google-auth-service.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GoogleAuthService: () => (/* binding */ GoogleAuthService)\n/* harmony export */ });\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabase */ \"(rsc)/./lib/supabase.ts\");\n/* harmony import */ var _encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./encryption */ \"(rsc)/./lib/encryption.ts\");\n/* harmony import */ var google_auth_library__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! google-auth-library */ \"(rsc)/./node_modules/google-auth-library/build/src/index.js\");\n\n\n\n/**\n * Google Authentication Service\n * \n * Handles the complete Google API authentication workflow:\n * 1. Decrypt service account credentials from database\n * 2. Generate JWT tokens using service account private key\n * 3. Exchange JWT for access tokens with Google's token endpoint\n * 4. Cache encrypted access tokens in database with expiration\n * 5. Manage token refresh and quota tracking\n */ class GoogleAuthService {\n    static{\n        this.INDEXING_SCOPE = 'https://www.googleapis.com/auth/indexing';\n    }\n    static{\n        this.TOKEN_EXPIRY_BUFFER = 5 * 60 * 1000; // 5 minutes buffer\n    }\n    static getInstance() {\n        if (!GoogleAuthService.instance) {\n            GoogleAuthService.instance = new GoogleAuthService();\n        }\n        return GoogleAuthService.instance;\n    }\n    /**\n   * Get a valid access token for Google API calls\n   * First checks cached token in database, then generates new one if needed\n   */ async getAccessToken(serviceAccountId) {\n        try {\n            console.log(`üîë Getting access token for service account: ${serviceAccountId}`);\n            // Get service account from database\n            const { data: serviceAccount, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabaseAdmin.from('indb_google_service_accounts').select('*').eq('id', serviceAccountId).single();\n            if (error || !serviceAccount) {\n                console.error('Service account not found:', error);\n                return null;\n            }\n            // DEBUG: Log encrypted data info\n            console.log('üîç DEBUG - Service Account Data:');\n            console.log('- ID:', serviceAccount.id);\n            console.log('- Name:', serviceAccount.name);\n            console.log('- Email:', serviceAccount.email);\n            console.log('- Is Active:', serviceAccount.is_active);\n            console.log('- Encrypted Credentials Length:', serviceAccount.encrypted_credentials?.length || 0);\n            console.log('- Encrypted Credentials Preview:', serviceAccount.encrypted_credentials?.substring(0, 100) + '...');\n            console.log('- Current ENCRYPTION_KEY:', process.env.ENCRYPTION_KEY?.substring(0, 8) + '...');\n            // Check format\n            const parts = serviceAccount.encrypted_credentials?.split(':');\n            console.log('- Encrypted Format Parts:', parts?.length || 0);\n            if (parts && parts.length === 2) {\n                console.log('- IV Length (hex):', parts[0].length);\n                console.log('- Encrypted Data Length (hex):', parts[1].length);\n                console.log('- IV (first 16 chars):', parts[0].substring(0, 16));\n                console.log('- Encrypted Data (first 32 chars):', parts[1].substring(0, 32));\n            }\n            // Check if we have a valid cached token\n            const cachedToken = await this.getCachedAccessToken(serviceAccount);\n            if (cachedToken) {\n                console.log('‚úÖ Using cached access token');\n                return cachedToken;\n            }\n            // Generate new access token\n            console.log('üîÑ Generating new access token');\n            const newToken = await this.generateNewAccessToken(serviceAccount);\n            if (newToken) {\n                // Cache the new token in database\n                await this.cacheAccessToken(serviceAccountId, newToken);\n                console.log('‚úÖ New access token generated and cached');\n                return newToken.access_token;\n            }\n            return null;\n        } catch (error) {\n            console.error('Error getting access token:', error);\n            return null;\n        }\n    }\n    /**\n   * Get available service account for a user\n   */ async getAvailableServiceAccount(userId) {\n        try {\n            const { data: accounts, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabaseAdmin.from('indb_google_service_accounts').select('*').eq('user_id', userId).eq('is_active', true).limit(1);\n            if (error || !accounts?.length) {\n                console.log('No active service accounts found for user:', userId);\n                return null;\n            }\n            return accounts[0];\n        } catch (error) {\n            console.error('Error getting service account:', error);\n            return null;\n        }\n    }\n    /**\n   * Check if we have a valid cached access token\n   */ async getCachedAccessToken(serviceAccount) {\n        try {\n            if (!serviceAccount.encrypted_access_token || !serviceAccount.access_token_expires_at) {\n                return null;\n            }\n            const expiresAt = new Date(serviceAccount.access_token_expires_at).getTime();\n            const now = Date.now();\n            // Check if token is still valid (with buffer)\n            if (expiresAt <= now + GoogleAuthService.TOKEN_EXPIRY_BUFFER) {\n                console.log('Cached token expired or expiring soon');\n                return null;\n            }\n            // Decrypt and return cached token\n            const accessToken = _encryption__WEBPACK_IMPORTED_MODULE_1__.EncryptionService.decrypt(serviceAccount.encrypted_access_token);\n            return accessToken;\n        } catch (error) {\n            console.error('Error checking cached token:', error);\n            return null;\n        }\n    }\n    /**\n   * Generate new access token using service account credentials\n   */ async generateNewAccessToken(serviceAccount) {\n        try {\n            console.log('üîÑ Starting generateNewAccessToken process...');\n            // Check if credentials are empty (after reset)\n            if (!serviceAccount.encrypted_credentials || serviceAccount.encrypted_credentials.trim() === '') {\n                console.log('‚ö†Ô∏è Service account has no encrypted credentials. Skipping...');\n                return null;\n            }\n            console.log('üîê DEBUG - About to decrypt credentials...');\n            console.log('- Encrypted data to decrypt:', serviceAccount.encrypted_credentials.substring(0, 100) + '...');\n            // Decrypt service account credentials\n            let credentialsJson;\n            try {\n                credentialsJson = _encryption__WEBPACK_IMPORTED_MODULE_1__.EncryptionService.decrypt(serviceAccount.encrypted_credentials);\n                console.log('‚úÖ DEBUG - Decryption successful!');\n                console.log('- Decrypted JSON length:', credentialsJson.length);\n                console.log('- Decrypted JSON preview (first 200 chars):', credentialsJson.substring(0, 200) + '...');\n            } catch (decryptError) {\n                console.error('‚ùå DEBUG - Decryption failed:', decryptError);\n                console.error('- Error type:', decryptError instanceof Error ? decryptError.name : typeof decryptError);\n                console.error('- Error message:', decryptError instanceof Error ? decryptError.message : String(decryptError));\n                throw decryptError;\n            }\n            console.log('üìã DEBUG - Parsing JSON credentials...');\n            let credentials;\n            try {\n                credentials = JSON.parse(credentialsJson);\n                console.log('‚úÖ DEBUG - JSON parsing successful!');\n                console.log('- Service account type:', credentials.type);\n                console.log('- Project ID:', credentials.project_id);\n                console.log('- Client email:', credentials.client_email);\n                console.log('- Private key preview:', credentials.private_key?.substring(0, 50) + '...');\n            } catch (parseError) {\n                console.error('‚ùå DEBUG - JSON parsing failed:', parseError);\n                console.error('- Raw decrypted data:', credentialsJson);\n                throw parseError;\n            }\n            console.log('üîê DEBUG - Creating JWT with service account credentials...');\n            console.log('- Email for JWT:', credentials.client_email);\n            console.log('- Private key starts with:', credentials.private_key?.substring(0, 30));\n            console.log('- Scopes:', [\n                GoogleAuthService.INDEXING_SCOPE\n            ]);\n            // Create JWT client\n            let jwtClient;\n            try {\n                jwtClient = new google_auth_library__WEBPACK_IMPORTED_MODULE_2__.JWT({\n                    email: credentials.client_email,\n                    key: credentials.private_key,\n                    scopes: [\n                        GoogleAuthService.INDEXING_SCOPE\n                    ]\n                });\n                console.log('‚úÖ DEBUG - JWT client created successfully');\n            } catch (jwtError) {\n                console.error('‚ùå DEBUG - JWT client creation failed:', jwtError);\n                throw jwtError;\n            }\n            console.log('üåê DEBUG - Requesting access token from Google...');\n            // Get access token\n            let tokenResponse;\n            try {\n                tokenResponse = await jwtClient.authorize();\n                console.log('‚úÖ DEBUG - Google authorization successful!');\n                console.log('- Token type:', typeof tokenResponse.access_token);\n                console.log('- Token length:', tokenResponse.access_token?.length || 0);\n                console.log('- Token preview:', tokenResponse.access_token?.substring(0, 20) + '...');\n                console.log('- Expires in:', tokenResponse.expiry_date);\n            } catch (authError) {\n                console.error('‚ùå DEBUG - Google authorization failed:', authError);\n                console.error('- Error details:', authError instanceof Error ? authError.message : String(authError));\n                throw authError;\n            }\n            if (!tokenResponse.access_token) {\n                console.error('‚ùå DEBUG - No access token received from Google');\n                console.error('- Response:', tokenResponse);\n                throw new Error('No access token received from Google');\n            }\n            console.log('‚úÖ Successfully obtained access token from Google');\n            return {\n                access_token: tokenResponse.access_token,\n                expires_in: 3600 // Google tokens typically expire in 1 hour\n            };\n        } catch (error) {\n            console.error('Error generating access token:', error);\n            return null;\n        }\n    }\n    /**\n   * Cache encrypted access token in database\n   */ async cacheAccessToken(serviceAccountId, tokenData) {\n        try {\n            // Encrypt access token\n            const encryptedToken = _encryption__WEBPACK_IMPORTED_MODULE_1__.EncryptionService.encrypt(tokenData.access_token);\n            // Calculate expiration time (with some buffer)\n            const expiresAt = new Date(Date.now() + tokenData.expires_in * 1000 - GoogleAuthService.TOKEN_EXPIRY_BUFFER);\n            // Update service account with cached token\n            const { error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabaseAdmin.from('indb_google_service_accounts').update({\n                encrypted_access_token: encryptedToken,\n                access_token_expires_at: expiresAt.toISOString(),\n                updated_at: new Date().toISOString()\n            }).eq('id', serviceAccountId);\n            if (error) {\n                console.error('Error caching access token:', error);\n            } else {\n                console.log('‚úÖ Access token cached in database');\n            }\n        } catch (error) {\n            console.error('Error caching access token:', error);\n        }\n    }\n    /**\n   * Validate service account credentials format\n   */ static validateServiceAccountCredentials(credentialsJson) {\n        try {\n            const credentials = JSON.parse(credentialsJson);\n            const requiredFields = [\n                'type',\n                'project_id',\n                'private_key_id',\n                'private_key',\n                'client_email',\n                'client_id',\n                'auth_uri',\n                'token_uri'\n            ];\n            return requiredFields.every((field)=>credentials[field]);\n        } catch (error) {\n            return false;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/google-auth-service.ts\n");

/***/ }),

/***/ "(rsc)/./lib/supabase.ts":
/*!*************************!*\
  !*** ./lib/supabase.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   supabase: () => (/* binding */ supabase),\n/* harmony export */   supabaseAdmin: () => (/* binding */ supabaseAdmin)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\nconst supabaseUrl = \"https://base.indexnow.studio\";\nconst supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlzcyI6InN1cGFiYXNlIiwiaWF0IjoxNzUzMDMwODAwLCJleHAiOjE5MTA3OTcyMDB9.druA2hNMG5tlToENwA6diLetpMm9GdJgaSRwi75iTW0\";\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseAnonKey, {\n    auth: {\n        autoRefreshToken: true,\n        persistSession: true,\n        detectSessionInUrl: true\n    }\n});\n// Server-side client with service role key (for admin operations)\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;\nconst supabaseAdmin = supabaseServiceKey ? (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseServiceKey, {\n    auth: {\n        autoRefreshToken: false,\n        persistSession: false\n    }\n}) : (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseAnonKey) // Fallback to anon key\n;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (supabase);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvc3VwYWJhc2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFvRDtBQUVwRCxNQUFNQyxjQUFjQyw4QkFBb0M7QUFDeEQsTUFBTUcsa0JBQWtCSCwyS0FBeUM7QUFFMUQsTUFBTUssV0FBV1AsbUVBQVlBLENBQUNDLGFBQWFJLGlCQUFpQjtJQUNqRUcsTUFBTTtRQUNKQyxrQkFBa0I7UUFDbEJDLGdCQUFnQjtRQUNoQkMsb0JBQW9CO0lBQ3RCO0FBQ0YsR0FBRTtBQUVGLGtFQUFrRTtBQUNsRSxNQUFNQyxxQkFBcUJWLFFBQVFDLEdBQUcsQ0FBQ1UseUJBQXlCO0FBQ3pELE1BQU1DLGdCQUFnQkYscUJBQ3pCWixtRUFBWUEsQ0FBQ0MsYUFBYVcsb0JBQW9CO0lBQzVDSixNQUFNO1FBQ0pDLGtCQUFrQjtRQUNsQkMsZ0JBQWdCO0lBQ2xCO0FBQ0YsS0FDQVYsbUVBQVlBLENBQUNDLGFBQWFJLGlCQUFpQix1QkFBdUI7Q0FBeEI7QUFFOUMsaUVBQWVFLFFBQVFBLEVBQUEiLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3Jrc3BhY2UvbGliL3N1cGFiYXNlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNsaWVudCB9IGZyb20gJ0BzdXBhYmFzZS9zdXBhYmFzZS1qcydcblxuY29uc3Qgc3VwYWJhc2VVcmwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwhXG5jb25zdCBzdXBhYmFzZUFub25LZXkgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSFcblxuZXhwb3J0IGNvbnN0IHN1cGFiYXNlID0gY3JlYXRlQ2xpZW50KHN1cGFiYXNlVXJsLCBzdXBhYmFzZUFub25LZXksIHtcbiAgYXV0aDoge1xuICAgIGF1dG9SZWZyZXNoVG9rZW46IHRydWUsXG4gICAgcGVyc2lzdFNlc3Npb246IHRydWUsXG4gICAgZGV0ZWN0U2Vzc2lvbkluVXJsOiB0cnVlXG4gIH1cbn0pXG5cbi8vIFNlcnZlci1zaWRlIGNsaWVudCB3aXRoIHNlcnZpY2Ugcm9sZSBrZXkgKGZvciBhZG1pbiBvcGVyYXRpb25zKVxuY29uc3Qgc3VwYWJhc2VTZXJ2aWNlS2V5ID0gcHJvY2Vzcy5lbnYuU1VQQUJBU0VfU0VSVklDRV9ST0xFX0tFWVxuZXhwb3J0IGNvbnN0IHN1cGFiYXNlQWRtaW4gPSBzdXBhYmFzZVNlcnZpY2VLZXlcbiAgPyBjcmVhdGVDbGllbnQoc3VwYWJhc2VVcmwsIHN1cGFiYXNlU2VydmljZUtleSwge1xuICAgICAgYXV0aDoge1xuICAgICAgICBhdXRvUmVmcmVzaFRva2VuOiBmYWxzZSxcbiAgICAgICAgcGVyc2lzdFNlc3Npb246IGZhbHNlXG4gICAgICB9XG4gICAgfSlcbiAgOiBjcmVhdGVDbGllbnQoc3VwYWJhc2VVcmwsIHN1cGFiYXNlQW5vbktleSkgLy8gRmFsbGJhY2sgdG8gYW5vbiBrZXlcblxuZXhwb3J0IGRlZmF1bHQgc3VwYWJhc2UiXSwibmFtZXMiOlsiY3JlYXRlQ2xpZW50Iiwic3VwYWJhc2VVcmwiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIiwic3VwYWJhc2VBbm9uS2V5IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkiLCJzdXBhYmFzZSIsImF1dGgiLCJhdXRvUmVmcmVzaFRva2VuIiwicGVyc2lzdFNlc3Npb24iLCJkZXRlY3RTZXNzaW9uSW5VcmwiLCJzdXBhYmFzZVNlcnZpY2VLZXkiLCJTVVBBQkFTRV9TRVJWSUNFX1JPTEVfS0VZIiwic3VwYWJhc2VBZG1pbiJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./lib/supabase.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fdebug-auth%2Froute&page=%2Fapi%2Fdebug-auth%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdebug-auth%2Froute.ts&appDir=%2Fhome%2Frunner%2Fworkspace%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Frunner%2Fworkspace&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fdebug-auth%2Froute&page=%2Fapi%2Fdebug-auth%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdebug-auth%2Froute.ts&appDir=%2Fhome%2Frunner%2Fworkspace%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Frunner%2Fworkspace&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _home_runner_workspace_app_api_debug_auth_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./app/api/debug-auth/route.ts */ \"(rsc)/./app/api/debug-auth/route.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/debug-auth/route\",\n        pathname: \"/api/debug-auth\",\n        filename: \"route\",\n        bundlePath: \"app/api/debug-auth/route\"\n    },\n    distDir: \".next\" || 0,\n    projectDir:  false || '',\n    resolvedPagePath: \"/home/runner/workspace/app/api/debug-auth/route.ts\",\n    nextConfigOutput,\n    userland: _home_runner_workspace_app_api_debug_auth_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/debug-auth/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = \"false\";\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                dynamicIO: Boolean(nextConfig.experimental.dynamicIO),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fdebug-auth%2Froute&page=%2Fapi%2Fdebug-auth%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdebug-auth%2Froute.ts&appDir=%2Fhome%2Frunner%2Fworkspace%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Frunner%2Fworkspace&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "./work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "?32c4":
/*!****************************!*\
  !*** bufferutil (ignored) ***!
  \****************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?66e9":
/*!********************************!*\
  !*** utf-8-validate (ignored) ***!
  \********************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "node:buffer":
/*!******************************!*\
  !*** external "node:buffer" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:buffer");

/***/ }),

/***/ "node:fs":
/*!**************************!*\
  !*** external "node:fs" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:fs");

/***/ }),

/***/ "node:http":
/*!****************************!*\
  !*** external "node:http" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:http");

/***/ }),

/***/ "node:https":
/*!*****************************!*\
  !*** external "node:https" ***!
  \*****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:https");

/***/ }),

/***/ "node:net":
/*!***************************!*\
  !*** external "node:net" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:net");

/***/ }),

/***/ "node:path":
/*!****************************!*\
  !*** external "node:path" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:path");

/***/ }),

/***/ "node:process":
/*!*******************************!*\
  !*** external "node:process" ***!
  \*******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:process");

/***/ }),

/***/ "node:stream":
/*!******************************!*\
  !*** external "node:stream" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:stream");

/***/ }),

/***/ "node:stream/web":
/*!**********************************!*\
  !*** external "node:stream/web" ***!
  \**********************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:stream/web");

/***/ }),

/***/ "node:url":
/*!***************************!*\
  !*** external "node:url" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:url");

/***/ }),

/***/ "node:util":
/*!****************************!*\
  !*** external "node:util" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:util");

/***/ }),

/***/ "node:zlib":
/*!****************************!*\
  !*** external "node:zlib" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:zlib");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "process":
/*!**************************!*\
  !*** external "process" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("process");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("querystring");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "worker_threads":
/*!*********************************!*\
  !*** external "worker_threads" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("worker_threads");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/ws","vendor-chunks/whatwg-url","vendor-chunks/webidl-conversions","vendor-chunks/isows","vendor-chunks/next","vendor-chunks/google-auth-library","vendor-chunks/bignumber.js","vendor-chunks/gaxios","vendor-chunks/json-bigint","vendor-chunks/gtoken","vendor-chunks/google-logging-utils","vendor-chunks/gcp-metadata","vendor-chunks/jws","vendor-chunks/jwa","vendor-chunks/ecdsa-sig-formatter","vendor-chunks/base64-js","vendor-chunks/extend","vendor-chunks/safe-buffer","vendor-chunks/buffer-equal-constant-time"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fdebug-auth%2Froute&page=%2Fapi%2Fdebug-auth%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdebug-auth%2Froute.ts&appDir=%2Fhome%2Frunner%2Fworkspace%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Frunner%2Fworkspace&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();